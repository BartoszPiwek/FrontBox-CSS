/*!******************************************************************
Author      : Bartosz Piwek
Framework   : FrontBox-CSS
Url         : https://github.com/BartoszPiwek/FrontBox-CSS
Version     : 1.3.0
********************************************************************/
/*
Clearfix

Force an element to self-clear its children

Mixin:
cleartfix;

Style guide: Functions.clearfix
*/
/*
Click Placeholder

Create :before placeholder element to expand click space.

Markup:
<div class="wrap">
 <div>content</div>
</div>

Mixin:
add-click-expand($space);

Mixin arguments:
$space 		: numberPixel? : 5px

Changelog:
30.06.2019 - Init

Style guide: Functions.click placeholder
*/
/*
Disable

Set style for disabled elements
*/
/*
Fixed

Change to position fixed on iOS Safari while scrolling

Style guide: Fix.fixed
*/
.js_sticky .header__content, .burger-menu {
  position: fixed;
  /* stylelint-disable-next-line */
  -webkit-transform: translateZ(0);
  transform: translate3d(0, 0, 0);
  transform: translateZ(0);
  /* stylelint-disable-next-line */
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  /* stylelint-disable-next-line */
  -webkit-perspective: 1000;
  perspective: 1000; }

/*

Holder

Mixin:
add_holder($width, $height);

Mixin arguments:
$width: number
$height: number

Mixin example:
.holder {
	@include add_holder(500, 1000);
}

Mixin output:
<div class="holder">
	<div class="holder__content">Content</div>
</div>

Mixin style:
@include add_holder-style;

Style guide: Functions.holder
*/
/*
Hover

Set style for selectors :hover :active :focus ( .add-hover(@css_code); )
- add class &--hover for parent element to trigger hover for child element
EXAMPLE:
 .foo {
     .add-hover({
         color: red;
     });
 }
OUTPUT:
 .foo--hover:hover .foo,
 .foo--hover:hover .foo,
 .foo--hover:hover .foo,
 .foo:hover,
 .foo:active,
 .foo:focus {
     background-color: red;
}
*/
/*
Input Placeholder

Mixin:
@inlcude add-input-placeholder { @content };

Mixin example:
.placeholder {
	color: $color-secondary;
	@inlcude add-input-placeholder {
		color: $color-primary;
	}
}

Mixin output:
<input class="placeholder" placeholder="Simple input element">

Compatybility:
Chrome/Opera/Safari
Firefox 19+
Firefox 18-
IE 10+

Style guide: Functions.input-placeholder
*/
/*
Scrollbar

Create custom themes for the browser's native add-scrollbars

Mixin:
scrollbar($size, $color-background, $color-thumb);

Mixin arguments:
$size : numberPixel : 10px
$color-background: color : color('black')
$color-thumb: color : color('primary')

Mixin example:
scrollbar('20px', $color-primary, $color-secondary);

Mixin output:
<div class="scrollbar">
	<div class="scrollbar__content"></div>
</div>

Style guide: Functions.clearfix
*/
/*
Space

Add padding space in asix x/y

Mixin:
space-x($size);
space-y($size);
space($size, $size-y);

Mixin arguments:
$size 		: numberPixel
$size-y 	: numberPixel? : $size

Mixin example:
space-x(10px);
space-y(30px);
space(5px, 10px);

Mixin output:
<div class="row row-space-x">
	<div class="col-6"></div>
	<div class="col-6"></div>
</div>
<div class="row row-space-y">
	<div class="col-12"></div>
	<div class="col-12"></div>
</div>
<div class="row row-space">
	<div class="col-12"></div>
	<div class="col-12"></div>
	<div class="col-6"></div>
	<div class="col-6"></div>
</div>

Changelog:
2019.06-21 - Init

Style guide: Funcions.space
*/
/*
Triangle

Generate triangle style

Mixin arguments:
$width: number
$height: number
$position: ['up','right','down','left'];
$color: color

mixin:
triangle($width, $height, $position, $color: '');

mixin_usage:
triangle(40px, 50px, 'up', color('primary'));
triangle(20px, 80px, 'left', color('secondary'));

mixin_output:
<div class="triangle-up"></div>
<div class="triangle-left"></div>

Style guide: Functions.triangle
*/
/*
Wrap

Center the content in specify width.<br>
Add space around content (padding left/right)

Markup:
<div class="wrap">
 <div>content</div>
</div>

Emmet:
.wrap

Mixin:
wrap($max-width, $paddin-x);

Style guide: Flow.wrap
*/
/*
Burger

Transition burger plans to icon 'X'
First and last plank - rotate
center plank - hide

HTML:
<div class="burger-button block">
	<div class="plank"></div>
	<div class="plank"></div>
	<div class="plank"></div>
</div>
<div class="js_burger-active">
	<div class="burger-button block">
		<div class="plank"></div>
		<div class="plank"></div>
		<div class="plank"></div>
	</div>
</div>

Style guide: Common.burger
*/
.js_cookies-information {
  position: fixed;
  z-index: 6999;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 8px 0;
  transition: transform 0.2s, opacity 0.2s;
  border-top: 2px solid #05386b;
  opacity: 1;
  background-color: rgba(5, 56, 107, 0.9);
  box-shadow: 0 -5px 10px 0 rgba(0, 0, 0, 0.6); }
  .js_cookies-information__img {
    display: none; }
    @media screen and (min-width: 768px) {
      .js_cookies-information__img {
        display: block;
        position: absolute;
        bottom: 0;
        left: 0;
        width: 65px;
        height: 67px; } }
  .js_cookies-information__text {
    color: #fff;
    font-size: 14px;
    text-align: justify; }
  .js_cookies-information__container {
    position: relative;
    padding-right: 40px; }
    @media screen and (min-width: 768px) {
      .js_cookies-information__container {
        padding-left: 80px; } }
  .js_cookies-information__exit {
    position: relative;
    z-index: 0;
    position: absolute;
    top: 0;
    right: 0;
    cursor: pointer; }
    .js_cookies-information__exit:before {
      content: "";
      display: block;
      position: absolute;
      z-index: -1;
      top: 50%;
      left: 50%;
      width: calc(100% + 10px);
      height: calc(100% + 10px);
      transform: translate(-50%, -50%);
      cursor: pointer; }
    .js_cookies-information__exit .icon-x {
      width: 20px;
      height: 20px;
      transition: transform 0.2s; }
    .js_cookies-information__exit--hover:hover .js_cookies-information__exit .icon-x,
    .js_cookies-information__exit--hover:active .js_cookies-information__exit .icon-x,
    .js_cookies-information__exit--hover:focus .js_cookies-information__exit .icon-x,
    .js_cookies-information__exit--hover-active .js_cookies-information__exit .icon-x,
    .js_cookies-information__exit--hover-active .js_cookies-information__exit .icon-x,
    .js_cookies-information__exit--hover-active .js_cookies-information__exit .icon-x, .js_cookies-information__exit.is-active .icon-x, .js_cookies-information__exit:hover .icon-x, .js_cookies-information__exit:active .icon-x, .js_cookies-information__exit:focus .icon-x {
      transform: rotate(90deg); }
  .js_cookies-information--hide {
    transform: translate(0, 100%);
    opacity: 0; }

/*
Group center

Vertical center elements in content 

Emmet:
.group-center>span{Text}+img{}

Style guide: Flow.group-center
*/
.group-center {
  display: flex !important;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: center; }

.icon-x:before, .icon-x:after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 2px;
  transform-origin: left top;
  background-color: #fff; }

.icon-x:before {
  transform: rotate(45deg) translate(-50%, -50%); }

.icon-x:after {
  transform: rotate(-45deg) translate(-50%, -50%); }

.js_scrollbar-active .js_cookies-information, .js_scrollbar-active body {
  border-right: var(--scrollbarWidth, 0) solid #05386b; }

html.js_scroll-lock {
  position: fixed; }
  html.js_scroll-lock body {
    overflow: hidden; }

html:not(.js_scroll-lock) body {
  top: 0 !important; }

/*
Square

Block square

Markup:
<div class="block-square">
	Content
</div>

Style guide: Blocks.square
*/
.block-square {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 100%; }
  .block-square > * {
    position: absolute;
    top: 0;
    left: 0; }

/*
YouTube

Embed YouTube iframe (default 21/9)

Markup:
<div class="block-youtube">
	<iframe src="https://www.youtube.com/embed/GRxofEmo3HA"></iframe>
</div>
<div class="block-youtube block-youtube--16x9">
	<iframe src="https://www.youtube.com/embed/GRxofEmo3HA"></iframe>
</div>
<div class="block-youtube block-youtube--4x3">
	<iframe src="https://www.youtube.com/embed/GRxofEmo3HA"></iframe>
</div>
<div class="block-youtube block-youtube--1x1">
	<iframe src="https://www.youtube.com/embed/GRxofEmo3HA"></iframe>
</div>

Style guide: Blocks.youtube
*/
.block-youtube {
  display: block;
  position: relative;
  width: 100%;
  height: 0;
  padding-top: 42.85714%;
  overflow: hidden; }
  .block-youtube iframe {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0; }
  .block-youtube--16x9 {
    padding-top: 56.25%; }
  .block-youtube--4x3 {
    padding-top: 75%; }
  .block-youtube--1x1 {
    padding-top: 100%; }

/* stylelint-disable-next-line */
@keyframes animation_name {
  0% { }
  25% { }
  50% { }
  75% { }
  100% { } }

@keyframes animation_name {
  from { }
  to { } }

:root {
  --headerStickyDesktop: 50;
  --headerStickyTablet: 40;
  --headerStickyMobile: 30;
  --scrollbarWidth: 0; }

body,
html {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  min-height: 100%;
  overflow-x: hidden;
  -webkit-font-smoothing: antialiased; }

body {
  background-color: #379683;
  color: #fff;
  font-family: Arial, Helmet, Freesans, sans-serif;
  font-size: 16px; }
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    body {
      min-height: 100vh; } }

.scrollbar::-webkit-scrollbar,
body::-webkit-scrollbar {
  width: 5px;
  height: 5px;
  background-color: #379683;
  -webkit-appearance: none; }

.scrollbar::-webkit-scrollbar-thumb,
body::-webkit-scrollbar-thumb {
  min-width: 5px;
  max-height: 5px;
  background-color: #05386b; }

.scrollbar::-webkit-scrollbar-track,
body::-webkit-scrollbar-track {
  display: none; }

svg,
.icon {
  display: inline-block;
  width: 16px;
  height: 16px;
  overflow: visible;
  transition: color 0.2s;
  fill: currentColor;
  color: currentColor;
  vertical-align: middle;
  pointer-events: none; }

img {
  max-width: 100%;
  height: auto;
  /* stylelint-disable-next-line */
  image-rendering: -webkit-optimize-contrast; }

* {
  touch-action: manipulation; }

.page {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column; }

.background {
  pointer-events: none;
  user-select: none; }

/*
Buttons

Clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality

.btn-block - grow element width to 100%
.btn-disable - disables the button, it cannot be clicked
.btn-link - display only text without decorations

Markup:
<a class="btn {{modifier_class}}">Anchor element</a>
<button class="btn {{modifier_class}}">Button element</button>
<input class="btn {{modifier_class}}" type="button" value="Input Button" />

Style guide: Component.Buttons
*/
.btn {
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  height: 100%;
  padding: 14px 6px;
  transition: background-color 0.2s, color 0.2s, border-color 0.2s, transform 0.2s;
  border: 0;
  border-radius: 5px;
  background-color: #05386b;
  color: #fff;
  font-size: 14px;
  letter-spacing: 0.4px;
  text-align: center;
  cursor: pointer;
  user-select: none;
  -webkit-user-drag: none; }
  .btn .icon {
    transition: transform 0.2s; }
  .btn:active {
    transform: translateY(1px); }
  .btn-disable, .btn[disabled] {
    pointer-events: none; }
    .btn-disable:before, .btn[disabled]:before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: inherit;
      opacity: 0.6;
      background: #000;
      pointer-events: none; }
  .btn-block {
    display: block;
    width: 100% !important;
    max-width: 100% !important; }
  .btn-link {
    border-color: transparent !important;
    background: transparent !important;
    color: #000 !important; }
    .btn-link:before, .btn-link:after {
      background: transparent !important; }
  .btn--hover:hover .btn,
  .btn--hover:active .btn,
  .btn--hover:focus .btn,
  .btn--hover-active .btn,
  .btn--hover-active .btn,
  .btn--hover-active .btn, .btn.is-active, .btn:hover, .btn:active, .btn:focus {
    background-color: #053666; }

/*
Colors

Clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality

.btn--primary - colors
.btn--primary:hover - colors
.btn--secondary - colors
.btn--success - colors
.btn--danger - colors
.btn--warning - colors
.btn--info - colors
.btn--light - colors
.btn--dark - colors

Markup:
<a class="btn {{modifier_class}}">Anchor element</a>
<button class="btn {{modifier_class}}">Button element</button>
<input class="btn {{modifier_class}}" type="button" value="Input Button" />

Style guide: Component.Buttons.colors
*/
.btn--primary {
  background-color: #05386b; }
  .btn--primary--hover:hover .btn--primary,
  .btn--primary--hover:active .btn--primary,
  .btn--primary--hover:focus .btn--primary,
  .btn--primary--hover-active .btn--primary,
  .btn--primary--hover-active .btn--primary,
  .btn--primary--hover-active .btn--primary, .btn--primary.is-active, .btn--primary:hover, .btn--primary:active, .btn--primary:focus {
    background-color: #053667; }

/*
Size

.btn--large - size
.btn--wide - size
.btn--big - size
.btn--medium - size
.btn--small - size
.btn--tiny - size

Markup:
<a class="btn {{modifier_class}}">Anchor element</a>
<button class="btn {{modifier_class}}">Button element</button>
<input class="btn {{modifier_class}}" type="button" value="Input Button" />

Style guide: Component.Buttons.colors
*/
.footer {
  padding: 35px 0;
  overflow: hidden;
  background-color: #05386b; }
  .footer__item > *:first-child {
    margin-top: 0; }
  .footer__item > *:last-child {
    margin-bottom: 0; }
  .footer__title {
    margin: 20px 0;
    color: #fff;
    font-size: 28px;
    font-weight: 200; }
  .footer__content {
    color: #000;
    font-size: 16px; }

/*
SECTION Input

Example:
<div class="input" tabindex="0">
	<input id="input-default" name="input-default" required="required" tabindex="-1">
	<label class="input__label" for="input-default">
		<span class="input__input"></span>
		<span class="input__text">
			Label
		</span>
	</label>
</div>

Style guide: Forms.input-default
*/
.input {
  position: relative; }
  .input input {
    position: absolute !important;
    bottom: 0 !important;
    left: 50% !important;
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    overflow: hidden !important;
    clip: rect(0 0 0 0) !important;
    border: 0 !important;
    white-space: nowrap !important;
    /* stylelint-disable-next-line */
    -webkit-clip-path: inset(50%) !important;
    clip-path: inset(50%) !important; }
    .input input:disabled + .input-radio__label {
      opacity: 0.4;
      pointer-events: none;
      user-select: none; }
    .input input:checked + .input__label .input__input {
      /* Style for using SVG for checkbox element mark */
      /* Style for using color fill for checkbox element mark */ }
      .input input:checked + .input__label .input__input--mark-icon .input__mark {
        opacity: 1; }
      .input input:checked + .input__label .input__input--mark-color:before {
        opacity: 1; }
  .input__input {
    position: absolute;
    top: 0;
    left: 0;
    width: 20px;
    height: 20px;
    transition: border-color 0.2s;
    border: 1px solid #05386b; }
    .input__input--mark-color:before {
      content: "";
      position: absolute;
      top: 5%;
      left: 5%;
      width: 90%;
      height: 90%;
      transition: opacity 0.2s, background-color 0.2s;
      opacity: 0;
      background-color: #05386b; }
  .input__mark {
    position: absolute;
    top: 10%;
    left: 10%;
    width: 80%;
    height: 80%;
    transition: opacity 0.2s, fill 0.2s;
    opacity: 0;
    fill: #05386b; }
  .input__label {
    display: block;
    padding-left: 30px;
    cursor: pointer; }
    .input__label--hover:hover .input__label .input-checkbox__input,
    .input__label--hover:active .input__label .input-checkbox__input,
    .input__label--hover:focus .input__label .input-checkbox__input,
    .input__label--hover-active .input__label .input-checkbox__input,
    .input__label--hover-active .input__label .input-checkbox__input,
    .input__label--hover-active .input__label .input-checkbox__input, .input__label.is-active .input-checkbox__input, .input__label:hover .input-checkbox__input, .input__label:active .input-checkbox__input, .input__label:focus .input-checkbox__input {
      border-color: #000; }

/*
SECTION Checkbox

Example: 
<div class="input input-checkbox" tabindex="0">
	<input type="checkbox" id="checkbox1" name="checkbox1" required="required" tabindex="-1">
		<label class="input__label" for="checkbox1">
		<span class="input__input"></span>
		<span class="input__text">
			Label
		</span>
	</label>
</div>

<div class="input input-checkbox" tabindex="0">
	<input type="checkbox" id="checkbox2" name="checkbox2" required="required" tabindex="-1">
	<label class="input__label" for="checkbox2">
		<span class="input__input input__input--mark-icon">
			<svg class="input__mark" viewBox="0 0 512 512"><path d="M256 0C114.615 0 0 114.615 0 256s114.615 256 256 256 256-114.615 256-256S397.385 0 256 0zm-48 416L102 278l47-49 59 75 185-151 23 23-208 240z"></path></svg>
		</span>
		<span class="input__text">
			Label
		<span>
	</label>
</div>

<div class="input input-checkbox" tabindex="0">
	<input type="checkbox" id="checkbox3" name="checkbox3" required="required" tabindex="-1">
	<label class="input__label" for="checkbox3">
		<span class="input__input input__input--mark-color"></span>
		<span class="input__text">
			Label
		<span>
	</label>
</div>

Style guide: Forms.input-checkbox
*/
/*
SECTION Radio

Example: 
<div class="input input-radio" tabindex="0">
	<input type="radio" id="radio-default" name="input-radio" required="required" tabindex="-1">
	<label class="input__label" for="radio-default">
		<span class="input__input"></span>
		<span class="input__text">Label<span>
	</label>
</div>

<div class="input input-radio" tabindex="0">
	<input type="radio" id="radio-mark-color" name="input-radio" required="required" tabindex="-1">
	<label class="input__label" for="radio-mark-color">
		<span class="input__input input__input--mark-color"></span>
		<span class="input__text">
			Label
		<span>
	</label>
</div>

<div class="input input-radio" tabindex="0">
	<input type="radio" id="radio-mark-icon" name="input-radio" required="required" tabindex="-1">
	<label class="input__label" for="radio-mark-icon">
		<span class="input__input input__input--mark-icon">
			<svg class="input__mark" viewBox="0 0 512 512"><path d="M256 0C114.615 0 0 114.615 0 256s114.615 256 256 256 256-114.615 256-256S397.385 0 256 0zm-48 416L102 278l47-49 59 75 185-151 23 23-208 240z"></path></svg>
		</span>
		<span class="input__text">
			Label
		<span>
	</label>
</div>



Style guide: Forms.input-radio
*/
.input-radio .input__input {
  border-radius: 50%; }
  .input-radio .input__input--mark-color:before {
    border-radius: 50%; }

/*
SECTION Text

Example:
<input type="text" class="input-text" required="required">

Style guide: Forms.input-text
*/
.input-text {
  width: 100%;
  height: 38px;
  padding: 4px 12px;
  transition: border-color 0.2s, color 0.2s;
  border: 1px solid #05386b;
  border-radius: 8px;
  color: #05386b;
  font-size: 18px; }
  .input-text:hover {
    border-color: rgba(0, 0, 0, 0.6);
    color: rgba(0, 0, 0, 0.6); }
    .input-text:hover::placeholder, .input-text:hover::-webkit-input-placeholder, .input-text:hover::-moz-placeholder, .input-text:hover:-ms-input-placeholder, .input-text:hover:-moz-placeholder {
      color: rgba(0, 0, 0, 0.6); }
  .input-text:active, .input-text:focus {
    border-color: #000;
    color: #000; }
    .input-text:active::placeholder, .input-text:active::-webkit-input-placeholder, .input-text:active::-moz-placeholder, .input-text:active:-ms-input-placeholder, .input-text:active:-moz-placeholder, .input-text:focus::placeholder, .input-text:focus::-webkit-input-placeholder, .input-text:focus::-moz-placeholder, .input-text:focus:-ms-input-placeholder, .input-text:focus:-moz-placeholder {
      color: #000; }
  .input-text--block {
    display: block;
    width: 100%; }
  .input-text::placeholder, .input-text::-webkit-input-placeholder, .input-text::-moz-placeholder, .input-text:-ms-input-placeholder, .input-text:-moz-placeholder {
    transition: color 0.2s;
    color: #05386b;
    font-style: italic; }

/**
  * Input group
**/
.input-group > .input-group__item {
  position: relative;
  margin-bottom: 10px; }
  .input-group > .input-group__item:last-child {
    margin-bottom: 0; }

.input-group--block .input-group__item > * {
  display: block;
  width: 100%; }

.form {
  position: relative;
  padding: 10px; }
  .form__response-content {
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: opacity 0.2s, opacity 0.2s 0.2s;
    opacity: 0; }
  .form__response {
    position: absolute;
    z-index: -1;
    top: 50%;
    left: 50%;
    width: auto;
    transform: translate(-50%, -50%);
    transition: opacity 0.2s, opacity 0.2s 0.2s;
    opacity: 0; }
    .form__response--msg {
      width: 100%;
      font-size: 16px;
      font-weight: 700;
      text-align: center; }

/**
 * JavaScript form class 
*/
.js_form--run .form__content {
  opacity: 0.3;
  pointer-events: none;
  user-select: none;
  filter: blur(2px); }

.js_form--run .form__response-content {
  z-index: 1;
  opacity: 1; }

.js_form--wait .form__response--wait {
  z-index: 1;
  opacity: 1; }

.js_form--msg .form__response--msg {
  z-index: 1;
  opacity: 1; }

/*
Imports

Burger planks animation

Markup:
.burger-button>.plank>.plank>.plank
.js_burger-active>.burger-button>.plank>.plank>.plank

Style guide: Header.imports
*/
/*
Burger

Transition burger plans to icon 'X'
First and last plank - rotate
center plank - hide

HTML:
<div class="burger-button block">
	<div class="plank"></div>
	<div class="plank"></div>
	<div class="plank"></div>
</div>
<div class="js_burger-active">
	<div class="burger-button block">
		<div class="plank"></div>
		<div class="plank"></div>
		<div class="plank"></div>
	</div>
</div>

Style guide: Common.burger
*/
/*
Tools

Contains: row

Style guide: Header.tools
*/
.row-header-space {
  @inlcude add-space(25px, 20px); }

.header {
  position: relative;
  height: 90px; }
  .header__content {
    position: absolute;
    z-index: 8000;
    top: 0;
    left: 0;
    width: 100%;
    padding: 20px 0;
    transition: height 0.2s, box-shadow 0.2s, background-color 0.2s, padding 0.2s;
    background-color: #05386b;
    box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0); }
    .js_sticky .header__content {
      padding: 10px 0;
      box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.6); }
  @media screen and (max-width: 767px) {
    .js_burger-active .header__overlay {
      z-index: 1;
      background-color: rgba(0, 0, 0, 0.6);
      pointer-events: all; } }
  @media screen and (min-width: 768px) {
    .header {
      height: 90px; } }
  @media screen and (min-width: 992px) {
    .header {
      height: 90px; } }

.burger-button {
  position: relative;
  z-index: 0;
  position: relative;
  z-index: 8001;
  width: 30px;
  height: 24px;
  cursor: pointer;
  pointer-events: all; }
  .burger-button:before {
    content: "";
    display: block;
    position: absolute;
    z-index: -1;
    top: 50%;
    left: 50%;
    width: calc(100% + 10px);
    height: calc(100% + 10px);
    transform: translate(-50%, -50%);
    cursor: pointer; }
  .burger-button .plank {
    transition: margin-top 0.1s 0.1s, transform 0.2s, opacity 0.2s, background-color 0.2s;
    display: inline-block;
    position: absolute;
    width: 100%;
    height: 4px;
    border-radius: 10px;
    background-color: #90938f; }
    .js_burger-active .burger-button .plank {
      margin-top: calc(50% - 5px) !important;
      transition: margin-top 0.2s, transform 0.1s 0.1s, opacity 0.2s, background-color 0.2s; }
      .js_burger-active .burger-button .plank:first-child {
        transform: rotate(45deg); }
      .js_burger-active .burger-button .plank:last-child {
        transform: rotate(-45deg); }
      .js_burger-active .burger-button .plank:nth-child(2) {
        opacity: 0; }
    .burger-button .plank:first-child {
      margin-top: 0; }
    .burger-button .plank:nth-child(2) {
      margin-top: calc(50% - 5px); }
    .burger-button .plank:last-child {
      margin-top: calc(100% - 10px); }
  @media screen and (min-width: 768px) {
    .burger-button {
      display: none; } }
  .burger-button--hover:hover .burger-button .plank,
  .burger-button--hover:active .burger-button .plank,
  .burger-button--hover:focus .burger-button .plank,
  .burger-button--hover-active .burger-button .plank,
  .burger-button--hover-active .burger-button .plank,
  .burger-button--hover-active .burger-button .plank, .burger-button.is-active .plank, .burger-button:hover .plank, .burger-button:active .plank, .burger-button:focus .plank {
    background-color: #379683; }

/**
 * Burger menu
 */
@media screen and (max-width: 767px) {
  .burger-menu {
    height: 100vh;
    height: calc(100vh - var(--vh-offset, 0px));
    display: flex;
    z-index: 7000;
    top: 0;
    right: 0;
    width: 100%;
    max-width: 300px;
    padding-top: 70px;
    overflow: hidden;
    transform: translateX(100%);
    transition: transform 0.2s;
    background-color: #05386b;
    text-align: center; }
    .burger-menu > .burger-menu__item {
      margin-bottom: 20px; }
      .burger-menu > .burger-menu__item:last-child {
        margin-bottom: 0; }
    .burger-menu__container {
      width: 100%; }
    .js_burger-active .burger-menu {
      transform: translateX(0);
      box-shadow: -6px 0 10px rgba(0, 0, 0, 0.4); } }

@media screen and (min-width: 768px) {
  .burger-menu {
    display: flex !important;
    position: static;
    overflow: unset;
    transform: none;
    transition: height 0s ease 0s; } }

/*
Hero

Markup:
<div class="hero">
  <div class="hero__wrapper">
    <div class="wrap">
        <header class="hero__header">
          <h1 class="hero__title">Hero Title</h1>
        </header>
        <div class="hero__body">Hero body</div>
        <footer class="hero__footer">Hero footer</footer>
    </div>
  </div>
</div>

Mix class:
.height-full

Style guide: Elements.hero
*/
.hero {
  position: relative;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  /* Mix class */ }
  .hero__wrapper {
    padding: 100px 0; }
  .hero__header {
    margin-bottom: 50px; }
  .hero__body {
    font-size: 30px; }
  .hero__footer {
    margin-top: 50px;
    font-size: 22px; }
  .hero__title {
    font-size: 45px; }
  .hero.height-full {
    display: flex;
    align-items: center; }
    .hero.height-full > * {
      flex: 1 1 auto; }

/**
 * Default style
 */
.icon {
  transition: fill 0.2s; }

/*
Logo

Style guide: Common.logo
*/
.logo {
  display: flex;
  align-items: center;
  justify-content: center; }
  .logo__img {
    width: 50px;
    height: 50px; }
  .logo__text {
    margin-left: 10px;
    font-size: 18px; }

/*
Links

Style guide: Component.Links
*/
.link {
  transition: color 0.2s;
  cursor: pointer; }
  .link--primary {
    color: #05386b; }
    .link--primary .icon {
      fill: #05386b; }
    .link--primary--hover:hover .link--primary,
    .link--primary--hover:active .link--primary,
    .link--primary--hover:focus .link--primary,
    .link--primary--hover-active .link--primary,
    .link--primary--hover-active .link--primary,
    .link--primary--hover-active .link--primary, .link--primary.is-active, .link--primary:hover, .link--primary:active, .link--primary:focus {
      color: #031f3a; }
      .link--primary--hover:hover .link--primary .icon,
      .link--primary--hover:active .link--primary .icon,
      .link--primary--hover:focus .link--primary .icon,
      .link--primary--hover-active .link--primary .icon,
      .link--primary--hover-active .link--primary .icon,
      .link--primary--hover-active .link--primary .icon, .link--primary.is-active .icon, .link--primary:hover .icon, .link--primary:active .icon, .link--primary:focus .icon {
        fill: #031f3a; }
  .link--secondary {
    color: #379683; }
    .link--secondary .icon {
      fill: #379683; }
    .link--secondary--hover:hover .link--secondary,
    .link--secondary--hover:active .link--secondary,
    .link--secondary--hover:focus .link--secondary,
    .link--secondary--hover-active .link--secondary,
    .link--secondary--hover-active .link--secondary,
    .link--secondary--hover-active .link--secondary, .link--secondary.is-active, .link--secondary:hover, .link--secondary:active, .link--secondary:focus {
      color: #297162; }
      .link--secondary--hover:hover .link--secondary .icon,
      .link--secondary--hover:active .link--secondary .icon,
      .link--secondary--hover:focus .link--secondary .icon,
      .link--secondary--hover-active .link--secondary .icon,
      .link--secondary--hover-active .link--secondary .icon,
      .link--secondary--hover-active .link--secondary .icon, .link--secondary.is-active .icon, .link--secondary:hover .icon, .link--secondary:active .icon, .link--secondary:focus .icon {
        fill: #297162; }
  .link__group {
    width: calc(100% + 10px);
    margin-left: -10px !important;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center; }
    .link__group > *:not(.space-ignore) {
      padding-left: 10px !important; }
  .link--disabled, .link.is-disabled {
    color: #90938f !important;
    cursor: not-allowed; }
    .link--disabled .icon, .link.is-disabled .icon {
      fill: #90938f !important; }

.list__item {
  color: #fff; }

.list--same-size .list__item {
  flex: 1 0 auto !important; }

.list--dot > .list__item {
  position: relative;
  padding-left: 20px; }
  .list--dot > .list__item:before {
    content: "";
    display: block;
    position: absolute;
    top: 4px;
    left: 0;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: #05386b; }

.list--dot.list--horizontal > .list__item:before {
  left: 8px; }

/*
Vertical

Markup:
<div class="hideable">
	<ul class="list list--horizontal space-x list--dot">
		<li class="list__item">List item</li>
		<li class="list__item">List item</li>
		<li class="list__item">List item</li>
	</ul>
</div>

Style guide: List.vertical
*/
.list--vertical {
  margin-bottom: -14px !important; }
  .list--vertical > *:not(.space-ignore) {
    padding-bottom: 14px !important; }

.list--horizontal {
  width: calc(100% + 26px);
  margin-left: -26px !important;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap; }
  .list--horizontal > *:not(.space-ignore) {
    padding-left: 26px !important; }
  .list--horizontal .list__item {
    display: inline-block;
    flex: 0 1 auto; }

.nav-header-menu > .nav-header-menu__item {
  display: block;
  margin-bottom: 20px;
  padding: 10px 6px;
  transition: color 0.2s;
  color: #000;
  text-align: center; }
  .nav-header-menu > .nav-header-menu__item:last-child {
    margin-bottom: 0 !important; }
  .nav-header-menu > .nav-header-menu__item--hover:hover .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover:active .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover:focus .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover-active .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover-active .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover-active .nav-header-menu > .nav-header-menu__item, .nav-header-menu > .nav-header-menu__item.is-active, .nav-header-menu > .nav-header-menu__item:hover, .nav-header-menu > .nav-header-menu__item:active, .nav-header-menu > .nav-header-menu__item:focus {
    color: #05386b; }
  @media screen and (min-width: 768px) {
    .nav-header-menu > .nav-header-menu__item {
      display: flex;
      flex: 1 1 auto;
      align-items: center;
      justify-content: center;
      margin-right: 16px;
      margin-bottom: 0 !important;
      padding: 0; }
      .nav-header-menu > .nav-header-menu__item:last-child {
        margin-right: 0 !important; } }

@media screen and (min-width: 768px) {
  .nav-header-menu {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap; } }

.overlay {
  position: fixed;
  z-index: -1;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  pointer-events: none; }
  .overlay--default:before {
    content: "";
    display: block;
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.5;
    background-color: #05386b; }
  .overlay--side:before, .overlay--side:after {
    content: "";
    display: block;
    position: absolute;
    z-index: -1;
    left: 0;
    width: 100%;
    height: 100px;
    opacity: 0.5;
    background: linear-gradient(0deg, rgba(5, 56, 107, 0) 0, #05386b 100%); }
  .overlay--side:after {
    top: 0; }
  .overlay--side:before {
    bottom: 0;
    transform: rotate(180deg); }
  .overlay.active {
    z-index: 1;
    pointer-events: all !important; }

.table-scrollable {
  overflow-x: auto;
  overflow-y: hidden; }
  .table-scrollable::-webkit-scrollbar {
    width: "10px";
    height: "10px";
    background-color: #05386b;
    -webkit-appearance: none; }
  .table-scrollable::-webkit-scrollbar-thumb {
    min-width: "10px";
    max-height: "10px";
    background-color: #000; }
  .table-scrollable::-webkit-scrollbar-track {
    display: none; }

.table {
  display: block;
  width: 680px;
  overflow-x: auto;
  border-collapse: separate; }

.wrap {
  max-width: 1064px;
  padding-right: 20px;
  padding-left: 20px; }
  .wrap--navbar {
    max-width: 1064px;
    padding-right: 20px;
    padding-left: 20px; }
  .wrap--footer {
    max-width: 1064px;
    padding-right: 20px;
    padding-left: 20px; }

.space {
  @inlcude add-space(5px, 10px); }
  .space-x {
    @inlcude add-space-x(25px); }
  .space-y {
    @inlcude add-space-y(30px); }

.col-static--test {
  flex-basis: 300px; }

.wysiwyg > *:first-child {
  margin-top: 0 !important; }

.wysiwyg > *:last-child {
  margin-bottom: 0 !important; }

.wysiwyg pre {
  font-family: monospace; }

/*
Bouncing Dots 

Markup:
<div class="animation-boucing-dots">
	<span></span>
	<span></span>
	<span></span>
</div>

Style guide: Animation.bouncing 
*/
@keyframes animation-boucing-dots {
  0% {
    transform: translateY(5px);
    opacity: 1; }
  100% {
    transform: translateY(-5px);
    opacity: 0.1; } }

.animation-boucing-dots {
  display: inline-block;
  position: relative;
  padding: 5px 0;
  font-size: 0;
  text-align: center; }
  .animation-boucing-dots > span {
    display: inline-block;
    width: 10px;
    height: 10px;
    margin-right: 6px;
    transform: translateY(-5px);
    animation: animation-boucing-dots 0.6s infinite alternate;
    animation-delay: 0.2s;
    border-radius: 50%;
    background-color: #05386b; }
    .animation-boucing-dots > span:first-child {
      animation-delay: 0s; }
    .animation-boucing-dots > span:last-child {
      margin-right: 0;
      animation-delay: 0.4s; }

/*
Circle rotate

Markup:
<div class="animation-circle-rotate"></div>

Style guide: Animation.circle rotate 
*/
@keyframes animation-circle-rotate {
  from {
    transform: rotate(0); }
  to {
    transform: rotate(360deg); } }

.animation-circle-rotate {
  display: inline-block;
  position: relative;
  width: 30px;
  height: 30px;
  margin: 0 auto; }
  .animation-circle-rotate:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 2px solid transparantize(#05386b, 20%);
    border-radius: 50%; }
  .animation-circle-rotate:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: transform 0.2s;
    animation: animation-circle-rotate 0.6s infinite alternate;
    animation-play-state: running;
    animation-timing-function: ease-out;
    animation-delay: 0s;
    animation-iteration-count: infinite;
    animation-direction: normal;
    border-top: 1px solid #05386b;
    border-left: 1px solid #05386b;
    border-radius: 50%;
    animation-fill-mode: forwards; }

/*
Donut spinner

Markup:
<div class="animation-donut-spinner"></div>

Style guide: Animation.donut spinner
*/
@keyframes animation-donut-spinner {
  0% {
    transform: rotate(0deg); }
  100% {
    transform: rotate(360deg); } }

.animation-donut-spinner {
  display: inline-block;
  position: relative;
  width: 30px;
  height: 30px;
  margin: 0 auto;
  font-size: 0;
  text-align: center; }
  .animation-donut-spinner:before {
    content: "";
    display: inline-block;
    position: absolute;
    top: 0;
    left: 0;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    margin: 0;
    animation: animation-donut-spinner 1.2s linear infinite;
    border: 4px solid rgba(0, 0, 0, 0.1);
    border-radius: 50%;
    border-left-color: #05386b; }

/*
Drop

Markup:
<div class="animation-drop"></div>

Style guide: Animation.drop
*/
@keyframes animation-drop {
  0% {
    transform: scale(0); }
  100% {
    transform: scale(1);
    opacity: 0; } }

.animation-drop {
  display: inline-block;
  width: 40px;
  height: 40px;
  margin: 0 auto;
  animation: animation-drop 1s infinite ease-in-out;
  border-radius: 100%;
  background-color: #05386b; }

/*
Scale lines

Markup:
<div class="animation-scale-lines">
    <span></span>
    <span></span>
    <span></span>
</div>

Style guide: Animation.scale lines
*/
@keyframes animation-scale-lines {
  from {
    height: 60%;
    opacity: 0.8; }
  to {
    height: 100%;
    opacity: 1; } }

.animation-scale-lines {
  display: inline-flex;
  position: relative;
  align-items: center;
  justify-content: center;
  height: 36px;
  margin: 0 auto; }
  .animation-scale-lines > span {
    display: inline-block;
    width: 6px;
    height: 60%;
    margin-left: 6px;
    animation: animation-scale-lines 0.6s infinite alternate;
    background-color: #05386b; }
    .animation-scale-lines > span:first-child {
      margin-left: 0; }
    .animation-scale-lines > span:nth-child(2) {
      animation-delay: 0.2s; }
    .animation-scale-lines > span:nth-child(3) {
      animation-delay: 0.4s; }

/*
Transparent

Markup:
<div class="block-transparent" style="min-height: 40px;"></div>

Style guide: Elements.transparent
*/
.block-transparent {
  width: auto;
  max-width: 100%;
  height: auto;
  background-image: linear-gradient(45deg, #c4c4c4 25%, transparent 25%, transparent 75%, #c4c4c4 75%, #c4c4c4), linear-gradient(45deg, #c4c4c4 25%, transparent 25%, transparent 75%, #c4c4c4 75%, #c4c4c4);
  background-position: 0 0, 10px 10px;
  background-size: 20px 20px;
  vertical-align: top; }

/*
Alert

Markup:
<div class="alert">
 <p class="alert__text">Text</p>
</div>

Style guide: Elements.alert
*/
.alert {
  display: block;
  position: relative;
  width: 100%;
  padding: 12px 16px;
  border: 1px solid rgba(5, 56, 107, 0.2);
  border-radius: 5px;
  background-color: rgba(5, 56, 107, 0.5); }
  .alert > .alert__text {
    display: inline-block;
    position: relative;
    color: #fff;
    font-size: 14px;
    vertical-align: middle; }
  .alert .icon {
    width: 16px;
    height: 16px; }

/*
Breadcrumbs

Flip element content

Markup:
<div class="breadcrumbs">
  <div class="breadcrumbs__item">
    <a href="#" class="link">Link</a>
  </div>
  <div class="breadcrumbs__item">
    <a href="#" class="link">Link</a>
  </div>
  <div class="breadcrumbs__item">
    <a href="#" class="link">Link</a>
  </div>
</div>

Style guide: Elements.breadcrumbs
*/
.breadcrumbs {
  color: #000;
  font-size: 16px;
  vertical-align: middle; }
  .breadcrumbs__item {
    display: inline-block;
    position: relative;
    padding-left: 15px; }
    .breadcrumbs__item:before {
      content: "<";
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      color: #05386b; }
    .breadcrumbs__item:first-child {
      padding-left: 0; }
      .breadcrumbs__item:first-child:before {
        content: none; }

/*
Flipper

Flip element content

Markup:
<div class="flipper">
	<div class="flipper__container">
		<div class="flipper__item flipper__item--front bg-red">
			Front
		</div>
		<div class="flipper__item flipper__item--back bg-blue">
			Back
		</div>
	</div>
</div>

Style guide: Blocks.flipper
*/
.flipper {
  display: block;
  width: 100px;
  height: 100px;
  perspective: 1000; }
  .flipper__container {
    position: relative;
    width: 100%;
    height: 100%;
    transition: 0.6s; }
  .flipper__item {
    display: flex;
    position: absolute;
    top: 0;
    left: 0;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    transition: 0s;
    transition-delay: 0.2s; }
    .flipper__item--front {
      z-index: 2; }
    .flipper__item--back {
      transform: rotateY(180deg);
      opacity: 0; }
  .flipper--hover:hover .flipper .flipper__container,
  .flipper--hover:active .flipper .flipper__container,
  .flipper--hover:focus .flipper .flipper__container,
  .flipper--hover-active .flipper .flipper__container,
  .flipper--hover-active .flipper .flipper__container,
  .flipper--hover-active .flipper .flipper__container, .flipper.is-active .flipper__container, .flipper:hover .flipper__container, .flipper:active .flipper__container, .flipper:focus .flipper__container {
    transform: rotateY(180deg); }
  .flipper--hover:hover .flipper .flipper__item--front,
  .flipper--hover:active .flipper .flipper__item--front,
  .flipper--hover:focus .flipper .flipper__item--front,
  .flipper--hover-active .flipper .flipper__item--front,
  .flipper--hover-active .flipper .flipper__item--front,
  .flipper--hover-active .flipper .flipper__item--front, .flipper.is-active .flipper__item--front, .flipper:hover .flipper__item--front, .flipper:active .flipper__item--front, .flipper:focus .flipper__item--front {
    opacity: 0; }
  .flipper--hover:hover .flipper .flipper__item--back,
  .flipper--hover:active .flipper .flipper__item--back,
  .flipper--hover:focus .flipper .flipper__item--back,
  .flipper--hover-active .flipper .flipper__item--back,
  .flipper--hover-active .flipper .flipper__item--back,
  .flipper--hover-active .flipper .flipper__item--back, .flipper.is-active .flipper__item--back, .flipper:hover .flipper__item--back, .flipper:active .flipper__item--back, .flipper:focus .flipper__item--back {
    opacity: 1; }

/*
Timeline

Flip element content

Markup:
<div class="timeline">
    <div class="timeline__container">
        <div class="timeline__item">
            <div class="timeline__dot"></div>
            <div class="timeline__text">Item 1</div>
        </div>
        <div class="timeline__item">
            <div class="timeline__dot"></div>
            <div class="timeline__text">Item 2</div>
        </div>
        <div class="timeline__item">
            <div class="timeline__dot"></div>
            <div class="timeline__text">Item 3</div>
        </div>
    </div>
</div>

Style guide: Blocks.timeline
*/
.timeline__text {
  color: #000;
  font-size: 14px; }

.timeline__dot {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: #05386b; }

.timeline__item.active .timeline__dot:before {
  width: 40%;
  height: 40%;
  border-radius: 50%;
  background-color: #fff; }

.timeline__container > .timeline__item:before {
  top: 9px;
  width: 100%;
  height: 2px;
  background-color: rgba(5, 56, 107, 0.6); }

.timeline__item {
  position: relative;
  flex: 1 0 0px; }
  .timeline__item.active .timeline__dot:before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }

.timeline__container {
  display: flex;
  text-align: center; }
  .timeline__container > .timeline__item {
    z-index: 1; }
    .timeline__container > .timeline__item:before {
      content: "";
      display: block;
      position: absolute;
      z-index: -1;
      left: 0;
      width: 100%; }
    .timeline__container > .timeline__item:first-child:before {
      left: 50%;
      width: 50%; }
    .timeline__container > .timeline__item:last-child:before {
      left: 0;
      width: 50%; }

.timeline__dot {
  display: block;
  position: relative;
  margin: 0 auto; }

.info-no-script {
  position: fixed;
  z-index: zindex("first");
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.2); }
  .info-no-script__content {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    max-width: 500px;
    padding: 25px 20px;
    transform: translate(-50%, -50%);
    border-radius: 10px;
    background-color: rgba(0, 0, 0, 0.2);
    color: #fff; }
  .info-no-script__header {
    font-size: 18px;
    text-align: center; }
  .info-no-script__text {
    margin-top: 16px;
    font-size: 16px; }

.tabs {
  position: relative;
  width: 100%;
  overflow: hidden; }
  .tabs__item {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    transition: opacity 1s;
    opacity: 0;
    pointer-events: none; }
    .tabs__item.active {
      position: static;
      opacity: 1;
      pointer-events: all; }
      @media screen and (min-width: 992px) {
        .tabs__item.active {
          top: 0;
          transform: translateY(0); } }

.tabs-background:after {
  content: "";
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0, rgba(0, 0, 0, 0.5) 100%);
  background-repeat: repeat-x;
  background-position: center center;
  background-size: cover; }

.tabs-background__item {
  position: absolute;
  z-index: -2;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  transform: translate(-50%, -50%);
  transition: opacity 1s;
  opacity: 0;
  background-size: cover;
  pointer-events: none; }
  .tabs-background__item.active {
    opacity: 1;
    pointer-events: all; }

.tabs-navigation {
  font-size: 0;
  text-align: center; }
  .tabs-navigation > .tabs-navigation__item {
    width: 20px;
    height: 20px;
    margin: 0 20px;
    transition: background-color 0.2s;
    background-color: rgba(255, 255, 255, 0.3); }
    .tabs-navigation > .tabs-navigation__item.active {
      background-color: #fff !important; }
    .tabs-navigation > .tabs-navigation__item:first-child {
      margin-left: 0; }
    .tabs-navigation > .tabs-navigation__item:last-child {
      margin-right: 0; }
    .tabs-navigation > .tabs-navigation__item--hover:hover .tabs-navigation > .tabs-navigation__item,
    .tabs-navigation > .tabs-navigation__item--hover:active .tabs-navigation > .tabs-navigation__item,
    .tabs-navigation > .tabs-navigation__item--hover:focus .tabs-navigation > .tabs-navigation__item,
    .tabs-navigation > .tabs-navigation__item--hover-active .tabs-navigation > .tabs-navigation__item,
    .tabs-navigation > .tabs-navigation__item--hover-active .tabs-navigation > .tabs-navigation__item,
    .tabs-navigation > .tabs-navigation__item--hover-active .tabs-navigation > .tabs-navigation__item, .tabs-navigation > .tabs-navigation__item.is-active, .tabs-navigation > .tabs-navigation__item:hover, .tabs-navigation > .tabs-navigation__item:active, .tabs-navigation > .tabs-navigation__item:focus {
      background-color: rgba(255, 255, 255, 0.6); }
    @media screen and (min-width: 992px) {
      .tabs-navigation > .tabs-navigation__item {
        width: 10px;
        height: 10px;
        margin: 0 5px; } }

/*
Validator

Style for jQuery Validation Plugin

Markup:
<div class="wrap">
 <div>content</div>
</div>

Emmet:
.wrap

Mixin:
wrap($max-width, $paddin-x);

Style guide: JavaScript.validator
*/
.input-error {
  border-color: #dc3545 !important;
  color: #dc3545 !important;
  /**
      * Absolute validator information
      - right style
    **/
  /**
      * Absolute validator information
      - left style
    **/
  /**
      * Default validator information
    **/ }
  .input-error--absolute + *:not([class]) {
    padding-top: 20px; }
    .input-error--absolute + *:not([class]) label {
      display: block;
      position: relative;
      padding: 6px;
      border: 1px solid #dc3545;
      border-radius: 4px;
      background-color: #fff;
      font-size: 13px;
      text-align: center; }
      .input-error--absolute + *:not([class]) label:before {
        content: "";
        position: absolute;
        top: 0;
        left: 50%;
        transform: translate(-50%, -100%); }
    @media screen and (min-width: 768px) {
      .input-error--absolute + *:not([class]) {
        position: absolute;
        z-index: 20;
        top: 50%;
        padding-left: 10px; } }
  @media screen and (min-width: 768px) {
    .input-error--right + *:not([class]) {
      right: 0;
      transform: translate(100%, -50%); } }
  @media screen and (min-width: 768px) {
    .input-error--left + *:not([class]) label:before {
      top: 50%;
      right: 0;
      left: auto;
      transform: translate(100%, -50%); } }
  @media screen and (min-width: 768px) {
    .input-error--left + *:not([class]) {
      left: 0;
      padding-right: 10px;
      padding-left: 0;
      transform: translate(-100%, -50%); } }
  .input-error label.input-error {
    display: block;
    padding: 6px;
    text-align: center; }

/**
  * Validator class
  - success
**/
.input-success {
  border-color: #28a745 !important;
  color: #28a745 !important; }
  .input-success + *:not([class]) {
    display: none; }

/*
VH Unit 

Het reliable CSS vh sizes with fallback (https://github.com/Hiswe/vh-check)

Mixin:
add_vh-unit($size, $property);

Mixin arguments:
$size : number? : 100
$property : CSSProperty? : 'height'

Mixin example:
add_vh-unit(50, 'height')

Style guide: Libs.vh-unit
*/
/*=========================================================================
|| Plugin: wcag.less
===========================================================================
|| REQUIRED frontbox/wcag.js
=========================================================================*/
.js_wcag-focus {
  outline: 4px solid #0e5ca4; }
  .js_wcag-focus--ignore {
    outline: none !important; }

.wcag-skip {
  position: absolute;
  z-index: -10;
  top: 0;
  left: -9999px;
  padding: 10px 20px;
  transition: opacity 0.2s;
  opacity: 0;
  background-color: #000;
  color: #05386b; }
  .wcag-skip:before {
    content: "";
    display: block;
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateY(100%); }

.js_wcag-focus .wcag-skip {
  z-index: 9990;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  outline: 4px solid #05386b; }
  .js_wcag-focus .wcag-skip:focus {
    opacity: 1; }

/*
Line text

Markup:
<div class="line-text">
	<div class="line-text__item">
		<div class="line-text__line line-text__line--left"></div>
		Text
		<div class="line-text__line line-text__line--right"></div>
	</div>
</div>

Style guide: Blocks.line text
*/
.line-text {
  position: relative;
  z-index: 2;
  width: 100%;
  padding: 10px 0;
  overflow: hidden; }
  .line-text__item {
    display: inline-block;
    position: absolute;
    z-index: 2;
    top: 50%;
    left: 50%;
    padding: 0 20px;
    transform: translate(-50%, -50%);
    color: #05386b;
    font-size: 13px; }
  .line-text__line {
    position: absolute;
    z-index: 1;
    top: 50%;
    width: 100vw;
    height: 1px;
    transform: translateY(-50%);
    background-color: #05386b; }
    .line-text__line--left {
      left: 100%; }
    .line-text__line--right {
      right: 100%; }

/*# sourceMappingURL=style.dev.css.map */
