/*!******************************************************************
Author      : Bartosz Piwek
Framework   : FrontBox-CSS
Url         : https://github.com/BartoszPiwek/FrontBox-CSS
Version     : 1.1.0
********************************************************************/
/*
Clearfix

Force an element to self-clear its children

Mixin:
cleartfix;

Style guide: Functions.clearfix
*/
/*
Click Placeholder

Create :before placeholder element to expand click space.

Markup:
<div class="wrap">
 <div>content</div>
</div>

Mixin:
add-click-placeholder($space);

Mixin arguments:
$space 		: numberPixel? : 5px

Changelog:
30.06.2019 - Init

Style guide: Functions.click placeholder
*/
/*
Disable

Set style for disabled elements
*/
/*
Fixed

Change to position fixed on iOS Safari while scrolling

Style guide: Fix.fixed
*/
.burger-menu {
  position: fixed;
  -webkit-transform: translateZ(0);
  transform: translate3d(0, 0, 0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-perspective: 1000;
  transform: translateZ(0);
  perspective: 1000; }

/*
Group middle

Vertical center elements in content 

Emmet:
.group-middle>span{Text}+img{}

Style guide: Flow.group-middle
*/
.group-middle > * {
  vertical-align: middle !important;
  display: inline-block !important; }

/*

Holder

Mixin:
add_holder($width, $height);

Mixin arguments:
$width: number
$height: number

Mixin example:
.holder {
	@include add_holder(500, 1000);
}

Mixin output:
<div class="holder">
	<div class="holder__content">Content</div>
</div>

Mixin style:
@include add_holder-style;

Style guide: Functions.holder
*/
/*
Hover

Set style for selectors :hover :active :focus ( .add-hover(@css_code); )
- add class &--hover for parent element to trigger hover for child element
EXAMPLE:
 .foo {
     .add-hover({
         color: red;
     });
 }
OUTPUT:
 .foo--hover:hover .foo,
 .foo--hover:hover .foo,
 .foo--hover:hover .foo,
 .foo:hover,
 .foo:active,
 .foo:focus {
     background-color: red;
}
*/
/*
Input Placeholder

Mixin:
@inlcude add_placeholder { @content };

Mixin example:
.placeholder {
	color: $color-secondary;
	@inlcude add_placeholder {
		color: $color-primary;
	}
}

Mixin output:
<input class="placeholder" placeholder="Simple input element">

Compatybility:
Chrome/Opera/Safari
Firefox 19+
Firefox 18-
IE 10+

Style guide: Functions.input-placeholder
*/
.js_scrollbar-active .js_cookies-information, .js_scrollbar-active body {
  border-right: var(--scrollbarWidth, 0) solid #05386b; }

html.js_scroll-lock {
  position: fixed; }
  html.js_scroll-lock body {
    overflow: hidden; }

html:not(.js_scroll-lock) body {
  top: 0 !important; }

/*
Scrollbar

Create custom themes for the browser's native scrollbars

Mixin:
scrollbar($size, $color-background, $color-thumb);

Mixin arguments:
$size : numberPixel : 10px
$color-background: color : color('black')
$color-thumb: color : color('primary')

Mixin example:
scrollbar('20px', $color-primary, $color-secondary);

Mixin output:
<div class="scrollbar">
	<div class="scrollbar__content"></div>
</div>

Style guide: Functions.clearfix
*/
/*
Space

Add padding space in asix x/y

Mixin:
space-x($size);
space-y($size);
space($size, $size-y);

Mixin arguments:
$size 		: numberPixel
$size-y 	: numberPixel? : $size

Mixin example:
space-x(10px);
space-y(30px);
space(5px, 10px);

Mixin output:
<div class="row row-space-x">
	<div class="col-6"></div>
	<div class="col-6"></div>
</div>
<div class="row row-space-y">
	<div class="col-12"></div>
	<div class="col-12"></div>
</div>
<div class="row row-space">
	<div class="col-12"></div>
	<div class="col-12"></div>
	<div class="col-6"></div>
	<div class="col-6"></div>
</div>

Changelog:
2019.06-21 - Init

Style guide: Funcions.space
*/
/*
Square

Block square

Markup:
<div class="block-square">
	Content
</div>

Style guide: Blocks.square
*/
.block-square {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 100%; }
  .block-square > * {
    position: absolute;
    top: 0;
    left: 0; }

/*
Triangle

Generate triangle style

Mixin arguments:
$width: number
$height: number
$position: ['up','right','down','left'];
$color: color

mixin:
triangle($width, $height, $position, $color: '');

mixin_usage:
triangle(40px, 50px, 'up', color('primary'));
triangle(20px, 80px, 'left', color('secondary'));

mixin_output:
<div class="triangle-up"></div>
<div class="triangle-left"></div>

Style guide: Functions.triangle
*/
/*
Wrap

Center the content in specify width.<br>
Add space around content (padding left/right)

Markup:
<div class="wrap">
 <div>content</div>
</div>

Emmet:
.wrap

Mixin:
wrap($max-width, $paddin-x);

Style guide: Flow.wrap
*/
/*
YouTube

Embed YouTube iframe (default 21/9)

Style guide: Blocks.youtube
*/
.block-youtube {
  display: block;
  position: relative;
  width: 100%;
  height: 0;
  padding-top: 42.85714%;
  overflow: hidden; }
  .block-youtube iframe {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0; }
  .block-youtube--16x9 {
    padding-top: 56.25%; }
  .block-youtube--4x3 {
    padding-top: 75%; }
  .block-youtube--1x1 {
    padding-top: 100%; }

/*
Burger Animation

Transition burger plans to icon 'X'
First and last plank - rotate
center plank - hide

Style guide: Burger.animation
*/
.js_cookies-information {
  position: fixed;
  z-index: 6999;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 8px 0;
  transition: transform 0.2s, opacity 0.2s;
  border-top: 2px solid #05386b;
  opacity: 1;
  background-color: rgba(5, 56, 107, 0.9);
  box-shadow: 0 -5px 10px 0 rgba(0, 0, 0, 0.6); }
  .js_cookies-information__img {
    display: none; }
    @media screen and (min-width: 768px) {
      .js_cookies-information__img {
        display: block;
        position: absolute;
        bottom: 0;
        left: 0;
        width: 65px;
        height: 67px; } }
  .js_cookies-information__text {
    color: #fff;
    font-size: 14px;
    text-align: justify; }
  .js_cookies-information__container {
    position: relative;
    padding-right: 40px; }
    @media screen and (min-width: 768px) {
      .js_cookies-information__container {
        padding-left: 80px; } }
  .js_cookies-information__exit {
    position: absolute;
    top: 0;
    right: 0;
    width: 20px;
    height: 20px;
    transition: transform 0.2s;
    cursor: pointer; }
    .js_cookies-information__exit--hover:hover .js_cookies-information__exit,
    .js_cookies-information__exit--hover:active .js_cookies-information__exit,
    .js_cookies-information__exit--hover:focus .js_cookies-information__exit,
    .js_cookies-information__exit--hover-active .js_cookies-information__exit,
    .js_cookies-information__exit--hover-active .js_cookies-information__exit,
    .js_cookies-information__exit--hover-active .js_cookies-information__exit, .js_cookies-information__exit.is-active, .js_cookies-information__exit:hover, .js_cookies-information__exit:active, .js_cookies-information__exit:focus {
      transform: rotate(90deg); }
    .js_cookies-information__exit:before, .js_cookies-information__exit:after {
      content: '';
      position: absolute;
      top: 50%;
      left: 0;
      width: 100%;
      height: 2px;
      background-color: #fff; }
    .js_cookies-information__exit:before {
      transform: rotate(45deg); }
    .js_cookies-information__exit:after {
      transform: rotate(-45deg); }
  .js_cookies-information--hide {
    transform: translate(0, 100%);
    opacity: 0; }

@keyframes animation_name {
  0% { }
  25% { }
  50% { }
  75% { }
  100% { } }

@keyframes animation_name {
  from { }
  to { } }

:root {
  --desktop: 1200;
  --tablet: 992;
  --fablet: 768;
  --mobile: 576;
  --headerStickyDesktop: 50;
  --headerStickyTablet: 40;
  --headerStickyMobile: 30;
  --scrollbarWidth: 0; }

body,
html {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  min-height: 100%;
  overflow-x: hidden;
  -webkit-font-smoothing: antialiased; }

body {
  background-color: #379683;
  color: #fff;
  font-family: Arial, Helmet, Freesans, sans-serif; }
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    body {
      min-height: 100vh; } }

.scrollbar::-webkit-scrollbar,
body::-webkit-scrollbar {
  width: 5px;
  height: 5px;
  background-color: #379683;
  -webkit-appearance: none; }

.scrollbar::-webkit-scrollbar-thumb,
body::-webkit-scrollbar-thumb {
  min-width: 5px;
  max-height: 5px;
  background-color: #05386b; }

.scrollbar::-webkit-scrollbar-track,
body::-webkit-scrollbar-track {
  display: none; }

svg,
.icon {
  display: inline-block;
  width: 16px;
  height: 16px;
  overflow: visible;
  transition: color 0.2s;
  fill: currentColor;
  color: currentColor;
  vertical-align: middle;
  pointer-events: none; }

img {
  max-width: 100%;
  height: auto;
  image-rendering: -webkit-optimize-contrast; }

* {
  touch-action: manipulation; }

.background {
  pointer-events: none;
  user-select: none; }

.page {
  position: relative; }
  .page__loading, .page__overlay {
    position: fixed;
    z-index: -1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: background-color 0.2s;
    background-color: transparent; }
    .page__loading > *, .page__overlay > * {
      display: none; }
  .js_resize .page__loading {
    z-index: 99999;
    background: fade(#000, 40%);
    pointer-events: none;
    user-select: none; }
    .js_resize .page__loading > * {
      display: block;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%); }

/*=========================================================================
|| Boxes
=========================================================================*/
/*
Buttons

Clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality

.btn-block - grow element width to 100%
.btn-disable - disables the button, it cannot be clicked
.btn-link - display only text without decorations

Markup:
<a class="btn {{modifier_class}}">Anchor element</a>
<button class="btn {{modifier_class}}">Button element</button>
<input class="btn {{modifier_class}}" type="button" value="Input Button" />

Style guide: Component.Buttons
*/
.btn {
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  height: 100%;
  padding: 14px 6px;
  transition: background-color 0.2s, color 0.2s, border-color 0.2s, transform 0.2s;
  border: 0;
  border-radius: 5px;
  background-color: #05386b;
  color: #fff;
  font-size: 14px;
  letter-spacing: 0.4px;
  text-align: center;
  cursor: pointer;
  user-select: none;
  -webkit-user-drag: none; }
  .btn--hover:hover .btn,
  .btn--hover:active .btn,
  .btn--hover:focus .btn,
  .btn--hover-active .btn,
  .btn--hover-active .btn,
  .btn--hover-active .btn, .btn.is-active, .btn:hover, .btn:active, .btn:focus {
    background-color: #053666; }
  .btn .icon {
    transition: transform 0.2s; }
  .btn:active {
    transform: translateY(1px); }
  .btn-disable, .btn[disabled] {
    pointer-events: none; }
    .btn-disable:before, .btn[disabled]:before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: inherit;
      opacity: 0.6;
      background: #000;
      pointer-events: none; }
  .btn-block {
    display: block;
    width: 100% !important;
    max-width: 100% !important; }
  .btn-link {
    border-color: transparent !important;
    background: transparent !important;
    color: #000 !important; }
    .btn-link:before, .btn-link:after {
      background: transparent !important; }

/*
Colors

Clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality

.btn--primary - colors
.btn--primary:hover - colors
.btn--secondary - colors
.btn--success - colors
.btn--danger - colors
.btn--warning - colors
.btn--info - colors
.btn--light - colors
.btn--dark - colors

Markup:
<a class="btn {{modifier_class}}">Anchor element</a>
<button class="btn {{modifier_class}}">Button element</button>
<input class="btn {{modifier_class}}" type="button" value="Input Button" />

Style guide: Component.Buttons.colors
*/
.btn--primary {
  background-color: #05386b; }
  .btn--primary--hover:hover .btn--primary,
  .btn--primary--hover:active .btn--primary,
  .btn--primary--hover:focus .btn--primary,
  .btn--primary--hover-active .btn--primary,
  .btn--primary--hover-active .btn--primary,
  .btn--primary--hover-active .btn--primary, .btn--primary.is-active, .btn--primary:hover, .btn--primary:active, .btn--primary:focus {
    background-color: #053667; }

.btn--secondary {
  background-color: #379683; }

.btn--success {
  background-color: #28a745; }

.btn--danger {
  background-color: #dc3545; }

.btn--warning {
  background-color: #ffc107; }

.btn--info {
  background-color: #17a2b8; }

.btn--light {
  background-color: #f8f9fa; }

.btn--dark {
  background-color: #343a40; }

/*
Size

.btn--large - size
.btn--wide - size
.btn--big - size
.btn--medium - size
.btn--small - size
.btn--tiny - size

Markup:
<a class="btn {{modifier_class}}">Anchor element</a>
<button class="btn {{modifier_class}}">Button element</button>
<input class="btn {{modifier_class}}" type="button" value="Input Button" />

Style guide: Component.Buttons.colors
*/
.btn--large {
  padding: 30px 50px; }

.btn--wide {
  padding-right: 60px;
  padding-left: 60px; }

.btn--big {
  padding: 30px 45px; }

.btn--medium {
  padding: 20px 20px; }

.btn--small {
  padding: 15px 20px; }

.btn--tiny {
  padding: 14px 12px; }

/*=========================================================================
|| FILE: Footer
===========================================================================
|| Style for footer elements
=========================================================================*/
.footer {
  padding: 35px 0;
  overflow: hidden;
  background-color: #05386b; }
  .footer__item > *:first-child {
    margin-top: 0; }
  .footer__item > *:last-child {
    margin-bottom: 0; }
  .footer__title {
    margin: 20px 0;
    color: #fff;
    font-size: 28px;
    font-weight: 200; }
  .footer__content {
    color: #000;
    font-size: 16px; }

.row-footer {
  width: calc(100% + 25px);
  margin-left: -25px !important;
  margin-bottom: -25px !important; }
  .row-footer > *:not(.space-ignore) {
    padding-bottom: 25px !important;
    padding-left: 25px !important; }
  @media screen and (min-width: 992px) {
    .row-footer {
      width: calc(100% + 35px);
      margin-left: -35px !important;
      margin-bottom: -35px !important; }
      .row-footer > *:not(.space-ignore) {
        padding-bottom: 35px !important;
        padding-left: 35px !important; } }
  @media screen and (min-width: 1200px) {
    .row-footer {
      width: calc(100% + 45px);
      margin-left: -45px !important;
      margin-bottom: -45px !important; }
      .row-footer > *:not(.space-ignore) {
        padding-bottom: 45px !important;
        padding-left: 45px !important; } }

/*
SECTION Input

Example:
<div class="input" tabindex="0">
	<input id="input-default" name="input-default" required="required" tabindex="-1">
	<label class="input__label" for="input-default">
		<span class="input__input"></span>
		<span class="input__text">
			Label
		</span>
	</label>
</div>

Style guide: Forms.input-default
*/
.input {
  position: relative; }
  .input input {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    -webkit-clip-path: inset(50%) !important;
    clip-path: inset(50%) !important;
    height: 1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
    white-space: nowrap !important;
    bottom: 0 !important;
    left: 50% !important; }
    .input input:disabled + .input-radio__label {
      user-select: none;
      pointer-events: none;
      opacity: 0.4; }
    .input input:checked + .input__label .input__input {
      /* Style for using SVG for checkbox element mark */
      /* Style for using color fill for checkbox element mark */ }
      .input input:checked + .input__label .input__input--mark-icon .input__mark {
        opacity: 1; }
      .input input:checked + .input__label .input__input--mark-color:before {
        opacity: 1; }
  .input__input {
    width: 20px;
    height: 20px;
    position: absolute;
    top: 0;
    left: 0;
    transition: border-color 0.2s;
    border: 1px solid #05386b; }
    .input__input--mark-color:before {
      content: '';
      position: absolute;
      top: 5%;
      left: 5%;
      opacity: 0;
      transition: opacity 0.2s, background-color 0.2s;
      width: 90%;
      height: 90%;
      background-color: #05386b; }
  .input__mark {
    position: absolute;
    top: 10%;
    left: 10%;
    opacity: 0;
    transition: opacity 0.2s, fill 0.2s;
    width: 80%;
    height: 80%;
    fill: #05386b; }
  .input__label {
    cursor: pointer;
    display: block;
    padding-left: 30px; }
    .input__label--hover:hover .input__label .input-checkbox__input,
    .input__label--hover:active .input__label .input-checkbox__input,
    .input__label--hover:focus .input__label .input-checkbox__input,
    .input__label--hover-active .input__label .input-checkbox__input,
    .input__label--hover-active .input__label .input-checkbox__input,
    .input__label--hover-active .input__label .input-checkbox__input, .input__label.is-active .input-checkbox__input, .input__label:hover .input-checkbox__input, .input__label:active .input-checkbox__input, .input__label:focus .input-checkbox__input {
      border-color: #000; }

/*
SECTION Checkbox

Example: 
<div class="input input-checkbox" tabindex="0">
	<input type="checkbox" id="checkbox1" name="checkbox1" required="required" tabindex="-1">
		<label class="input__label" for="checkbox1">
		<span class="input__input"></span>
		<span class="input__text">
			Label
		</span>
	</label>
</div>

<div class="input input-checkbox" tabindex="0">
	<input type="checkbox" id="checkbox2" name="checkbox2" required="required" tabindex="-1">
	<label class="input__label" for="checkbox2">
		<span class="input__input input__input--mark-icon">
			<svg class="input__mark" viewBox="0 0 512 512"><path d="M256 0C114.615 0 0 114.615 0 256s114.615 256 256 256 256-114.615 256-256S397.385 0 256 0zm-48 416L102 278l47-49 59 75 185-151 23 23-208 240z"></path></svg>
		</span>
		<span class="input__text">
			Label
		<span>
	</label>
</div>

<div class="input input-checkbox" tabindex="0">
	<input type="checkbox" id="checkbox3" name="checkbox3" required="required" tabindex="-1">
	<label class="input__label" for="checkbox3">
		<span class="input__input input__input--mark-color"></span>
		<span class="input__text">
			Label
		<span>
	</label>
</div>

Style guide: Forms.input-checkbox
*/
/*
SECTION Radio

Example: 
<div class="input input-radio" tabindex="0">
	<input type="radio" id="radio-default" name="input-radio" required="required" tabindex="-1">
	<label class="input__label" for="radio-default">
		<span class="input__input"></span>
		<span class="input__text">Label<span>
	</label>
</div>

<div class="input input-radio" tabindex="0">
	<input type="radio" id="radio-mark-color" name="input-radio" required="required" tabindex="-1">
	<label class="input__label" for="radio-mark-color">
		<span class="input__input input__input--mark-color"></span>
		<span class="input__text">
			Label
		<span>
	</label>
</div>

<div class="input input-radio" tabindex="0">
	<input type="radio" id="radio-mark-icon" name="input-radio" required="required" tabindex="-1">
	<label class="input__label" for="radio-mark-icon">
		<span class="input__input input__input--mark-icon">
			<svg class="input__mark" viewBox="0 0 512 512"><path d="M256 0C114.615 0 0 114.615 0 256s114.615 256 256 256 256-114.615 256-256S397.385 0 256 0zm-48 416L102 278l47-49 59 75 185-151 23 23-208 240z"></path></svg>
		</span>
		<span class="input__text">
			Label
		<span>
	</label>
</div>



Style guide: Forms.input-radio
*/
.input-radio .input__input {
  border-radius: 50%; }
  .input-radio .input__input--mark-color:before {
    border-radius: 50%; }

/*
SECTION Text

Example:
<input type="text" class="input-text" required="required">

Style guide: Forms.input-text
*/
.input-text {
  width: 100%;
  height: 38px;
  padding: 4px 12px;
  font-size: 18px;
  border: 1px solid #05386b;
  border-radius: 8px;
  color: #05386b;
  transition: border-color 0.2s, color 0.2s; }
  .input-text::placeholder, .input-text::-webkit-input-placeholder, .input-text::-moz-placeholder, .input-text:-ms-input-placeholder, .input-text:-moz-placeholder {
    transition: color 0.2s;
    font-style: italic;
    color: #05386b; }
  .input-text:hover {
    border-color: rgba(0, 0, 0, 0.6);
    color: rgba(0, 0, 0, 0.6); }
    .input-text:hover::placeholder, .input-text:hover::-webkit-input-placeholder, .input-text:hover::-moz-placeholder, .input-text:hover:-ms-input-placeholder, .input-text:hover:-moz-placeholder {
      color: rgba(0, 0, 0, 0.6); }
  .input-text:active, .input-text:focus {
    border-color: #000;
    color: #000; }
    .input-text:active::placeholder, .input-text:active::-webkit-input-placeholder, .input-text:active::-moz-placeholder, .input-text:active:-ms-input-placeholder, .input-text:active:-moz-placeholder, .input-text:focus::placeholder, .input-text:focus::-webkit-input-placeholder, .input-text:focus::-moz-placeholder, .input-text:focus:-ms-input-placeholder, .input-text:focus:-moz-placeholder {
      color: #000; }
  .input-text--block {
    display: block;
    width: 100%; }

/**
  * Input group
**/
.input-group > .input-group__item {
  position: relative;
  margin-bottom: 10px; }
  .input-group > .input-group__item:last-child {
    margin-bottom: 0; }

.input-group--block .input-group__item > * {
  display: block;
  width: 100%; }

.form {
  position: relative;
  padding: 10px; }
  .form__response-content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    opacity: 0;
    transition: opacity 0.2s, opacity 0.2s 0.2s; }
  .form__response {
    position: absolute;
    top: 50%;
    left: 50%;
    width: auto;
    transform: translate(-50%, -50%);
    transition: opacity 0.2s, opacity 0.2s 0.2s;
    z-index: -1;
    opacity: 0; }
    .form__response--msg {
      width: 100%;
      font-size: 16px;
      text-align: center;
      font-weight: 700; }

/**
 * JavaScript form class 
*/
.js_form--run .form__content {
  user-select: none;
  pointer-events: none;
  filter: blur(2px);
  opacity: 0.3; }

.js_form--run .form__response-content {
  opacity: 1;
  z-index: 1; }

.js_form--wait .form__response--wait {
  opacity: 1;
  z-index: 1; }

.js_form--msg .form__response--msg {
  opacity: 1;
  z-index: 1; }

/*
Imports

Burger planks animation

Markup:
.burger-button>.plank>.plank>.plank
.js_burger-active>.burger-button>.plank>.plank>.plank

Style guide: Header.imports
*/
/*
Burger Animation

Transition burger plans to icon 'X'
First and last plank - rotate
center plank - hide

Style guide: Burger.animation
*/
/*
Tools

Contains: row

Style guide: Header.tools
*/
.row-header-space {
  width: calc(100% + 25px);
  margin-left: -25px !important;
  margin-bottom: -20px !important; }
  .row-header-space > *:not(.space-ignore) {
    padding-bottom: 20px !important;
    padding-left: 25px !important; }

@media screen and (max-width: 767px) {
  .js_burger-active .header__overlay {
    z-index: 1;
    background-color: rgba(0, 0, 0, 0.6);
    pointer-events: all; } }

.header {
  position: relative;
  height: 90px; }
  @media screen and (min-width: 768px) {
    .header {
      height: 90px; } }
  @media screen and (min-width: 992px) {
    .header {
      height: 90px; } }
  .header-placeholder {
    box-sizing: content-box;
    z-index: 7000;
    transition: background-color 0.2s;
    padding: 25px 0;
    top: 0;
    left: 0;
    width: 100%;
    background-color: #05386b; }
  .header__content {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 8000;
    width: 100%;
    padding: 20px 0;
    transition: height 0.2s, box-shadow 0.2s, background-color 0.2s, padding 0.2s;
    background-color: #05386b;
    box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0); }
    .js_sticky .header__content {
      position: fixed;
      padding: 10px 0;
      box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.6); }

.burger-button {
  position: relative;
  z-index: 0;
  position: relative;
  z-index: 8001;
  width: 30px;
  height: 24px;
  cursor: pointer;
  pointer-events: all; }
  .burger-button:before {
    content: '';
    display: block;
    position: absolute;
    z-index: -1;
    top: 50%;
    left: 50%;
    width: calc(100% + 10px);
    height: calc(100% + 10px);
    transform: translate(-50%, -50%);
    cursor: pointer; }
  @media screen and (min-width: 768px) {
    .burger-button {
      display: none; } }
  .burger-button--hover:hover .burger-button .plank,
  .burger-button--hover:active .burger-button .plank,
  .burger-button--hover:focus .burger-button .plank,
  .burger-button--hover-active .burger-button .plank,
  .burger-button--hover-active .burger-button .plank,
  .burger-button--hover-active .burger-button .plank, .burger-button.is-active .plank, .burger-button:hover .plank, .burger-button:active .plank, .burger-button:focus .plank {
    background-color: #379683; }
  .burger-button .plank {
    transition: margin-top 0.1s 0.1s, transform 0.2s, opacity 0.2s, background-color 0.2s;
    display: inline-block;
    position: absolute;
    width: 100%;
    height: 4px;
    border-radius: 10px;
    background-color: #90938f; }
    .js_burger-active .burger-button .plank {
      margin-top: calc(50% - 5px) !important;
      transition: margin-top 0.2s, transform 0.1s 0.1s, opacity 0.2s, background-color 0.2s; }
      .js_burger-active .burger-button .plank:first-child {
        transform: rotate(45deg); }
      .js_burger-active .burger-button .plank:last-child {
        transform: rotate(-45deg); }
      .js_burger-active .burger-button .plank:nth-child(2) {
        opacity: 0; }
    .burger-button .plank:first-child {
      margin-top: 0; }
    .burger-button .plank:nth-child(2) {
      margin-top: calc(50% - 5px); }
    .burger-button .plank:last-child {
      margin-top: calc(100% - 10px); }

/**
 * Burger menu
 */
@media screen and (max-width: 767px) {
  .burger-menu {
    height: 100vh;
    height: calc(100vh - var(--vh-offset, 0px));
    display: flex;
    z-index: 7000;
    top: 0;
    right: 0;
    width: 100%;
    max-width: 300px;
    padding-top: 70px;
    overflow: hidden;
    transform: translateX(100%);
    transition: transform 0.2s;
    background-color: #05386b;
    text-align: center; }
    .burger-menu > .burger-menu__item {
      margin-bottom: 20px; }
      .burger-menu > .burger-menu__item:last-child {
        margin-bottom: 0; }
    .burger-menu__container {
      width: 100%; }
    .js_burger-active .burger-menu {
      transform: translateX(0);
      box-shadow: -6px 0 10px rgba(0, 0, 0, 0.4); } }

@media screen and (min-width: 768px) {
  .burger-menu {
    display: flex !important;
    position: static;
    overflow: unset;
    transform: none;
    transition: height 0s ease 0s; } }

/*
|| Navigation
|| EMMET
nav.nav>a.nav__item*x
 */
.nav {
  box-sizing: content-box;
  bottom: 0;
  position: absolute;
  overflow: hidden; }
  @media screen and (min-width: 768px) {
    .nav {
      transition: height 0s ease 0s;
      box-sizing: border-box;
      display: flex !important;
      position: static;
      transform: none;
      overflow: unset; } }
  .nav__container {
    background-color: #05386b;
    text-align: center;
    z-index: 7001;
    position: relative; }
    @media screen and (min-width: 768px) {
      .nav__container {
        background-color: transparent;
        text-align: left;
        height: 100%;
        display: flex; } }
    .nav__container > .nav__item {
      display: block;
      color: #fff;
      transition: color 0.2s;
      margin-bottom: 10px;
      padding: 12px 0; }
      .nav__container > .nav__item--hover:hover .nav__container > .nav__item,
      .nav__container > .nav__item--hover:active .nav__container > .nav__item,
      .nav__container > .nav__item--hover:focus .nav__container > .nav__item,
      .nav__container > .nav__item--hover-active .nav__container > .nav__item,
      .nav__container > .nav__item--hover-active .nav__container > .nav__item,
      .nav__container > .nav__item--hover-active .nav__container > .nav__item, .nav__container > .nav__item.is-active, .nav__container > .nav__item:hover, .nav__container > .nav__item:active, .nav__container > .nav__item:focus {
        color: #b8b8b8; }
      .nav__container > .nav__item:last-child {
        margin-bottom: 0; }
      @media screen and (min-width: 768px) {
        .nav__container > .nav__item {
          margin-bottom: 0;
          padding: 0;
          margin-right: 10px;
          display: flex;
          justify-content: center;
          align-items: center; }
          .nav__container > .nav__item:last-child {
            margin-right: 0; } }
      @media screen and (min-width: 992px) {
        .nav__container > .nav__item {
          margin-right: 20px; } }
      .nav__container > .nav__item.active {
        color: #90938f; }

/*
Hero

Markup:
<div class="hero">
    <div class="hero__wrapper">
        <div class="wrap">
            <header class="hero__header">
                <h1 class="hero__title">Hero Title</h1>
            </header>
            <div class="hero__body">Hero body</div>
            <footer class="hero__footer">Hero footer</footer>
        </div>
    </div>
</div>

Mix class:
.height-full

Style guide: Elements.hero
*/
.hero {
  position: relative;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  /* Mix class */ }
  .hero__wrapper {
    padding: 100px 0; }
  .hero__header {
    margin-bottom: 50px; }
  .hero__body {
    font-size: 30px; }
  .hero__footer {
    font-size: 22px;
    margin-top: 50px; }
  .hero__title {
    font-size: 45px; }
  .hero.height-full {
    display: flex;
    align-items: center; }
    .hero.height-full > * {
      flex: 1 1 auto; }

/**
 * Default style
 */
.icon {
  transition: fill 0.2s; }

/*
Logo

Style guide: Common.logo
*/
.logo {
  display: flex;
  align-items: center;
  justify-content: center; }
  .logo__img {
    width: 50px;
    height: 50px; }
  .logo__text {
    margin-left: 10px;
    font-size: 18px; }

/*
Links

Style guide: Component.Links
*/
.link {
  transition: color 0.2s;
  cursor: pointer; }
  .link--primary {
    color: #05386b; }
    .link--primary .icon {
      fill: #05386b; }
    .link--primary--hover:hover .link--primary,
    .link--primary--hover:active .link--primary,
    .link--primary--hover:focus .link--primary,
    .link--primary--hover-active .link--primary,
    .link--primary--hover-active .link--primary,
    .link--primary--hover-active .link--primary, .link--primary.is-active, .link--primary:hover, .link--primary:active, .link--primary:focus {
      color: #031f3a; }
      .link--primary--hover:hover .link--primary .icon,
      .link--primary--hover:active .link--primary .icon,
      .link--primary--hover:focus .link--primary .icon,
      .link--primary--hover-active .link--primary .icon,
      .link--primary--hover-active .link--primary .icon,
      .link--primary--hover-active .link--primary .icon, .link--primary.is-active .icon, .link--primary:hover .icon, .link--primary:active .icon, .link--primary:focus .icon {
        fill: #031f3a; }
  .link--disabled, .link.is-disabled {
    color: #90938f !important;
    cursor: not-allowed; }
    .link--disabled .icon, .link.is-disabled .icon {
      fill: #90938f !important; }
  .link__group {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;
    width: calc(100% + 10px);
    margin-left: -10px !important; }
    .link__group > *:not(.space-ignore) {
      padding-left: 10px !important; }

/**
 * Base
 */
.list__icon {
  display: none; }

.list--same-size .list__item {
  flex: 1 0 auto !important; }

@media screen and (min-width: 768px) {
  .nav-header-menu {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap; } }

.nav-header-menu > .nav-header-menu__item {
  display: block;
  margin-bottom: 20px;
  padding: 10px 6px;
  transition: color 0.2s;
  color: #000;
  text-align: center; }
  .nav-header-menu > .nav-header-menu__item:last-child {
    margin-bottom: 0 !important; }
  @media screen and (min-width: 768px) {
    .nav-header-menu > .nav-header-menu__item {
      display: flex;
      flex: 1 1 auto;
      align-items: center;
      justify-content: center;
      margin-right: 16px;
      margin-bottom: 0 !important;
      padding: 0; }
      .nav-header-menu > .nav-header-menu__item:last-child {
        margin-right: 0 !important; } }
  .nav-header-menu > .nav-header-menu__item--hover:hover .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover:active .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover:focus .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover-active .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover-active .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover-active .nav-header-menu > .nav-header-menu__item, .nav-header-menu > .nav-header-menu__item.is-active, .nav-header-menu > .nav-header-menu__item:hover, .nav-header-menu > .nav-header-menu__item:active, .nav-header-menu > .nav-header-menu__item:focus {
    color: #05386b; }

.overlay {
  position: fixed;
  z-index: -1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none; }
  .overlay--default:before {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.5;
    background-color: #05386b;
    content: '';
    z-index: -1; }
  .overlay--side:before, .overlay--side:after {
    display: block;
    position: absolute;
    left: 0;
    width: 100%;
    height: 100px;
    opacity: 0.5;
    content: '';
    z-index: -1;
    background: linear-gradient(0deg, rgba(5, 56, 107, 0) 0, #05386b 100%); }
  .overlay--side:after {
    top: 0; }
  .overlay--side:before {
    bottom: 0;
    transform: rotate(180deg); }

/*=========================================================================
|| Style HTML tables
=========================================================================*/
/*=========================================================================
|| FILE: Tools
===========================================================================
|| Create class using functions
=========================================================================*/
/*=========================================================================
|| WRAP - center element in asix x
|| = max width elemnt (end calculate = max-width + padding * 2)
|| = padding for responsive view
//=======================================================================*/
.wrap {
  max-width: 1064px;
  padding-right: 20px;
  padding-left: 20px;
  /**
   * Elements
   */
  /* Navigation bar */ }
  .wrap-navbar {
    max-width: 1064px;
    padding-right: 20px;
    padding-left: 20px; }

.row {
  /*=========================================================================
  // ROW GAP
  // Set space beetween columns in ASIX X
  .space-x(20px);
  // * space beetween columns
  //=========================================================================
  // ROW SPACE
  // Set space beetween columns in ASIX Y
  .space-y(20px);
  // * space beetween columns
  == WARNING: row will have 'overflow: hidden'
  //=======================================================================*/ }
  .row-x-space {
    width: calc(100% + 25px);
    margin-left: -25px !important; }
    .row-x-space > *:not(.space-ignore) {
      padding-left: 25px !important; }
  .row-y-space {
    margin-bottom: -30px !important; }
    .row-y-space > *:not(.space-ignore) {
      padding-bottom: 30px !important; }
  .row-space {
    width: calc(100% + 5px);
    margin-left: -5px !important;
    margin-bottom: -10px !important; }
    .row-space > *:not(.space-ignore) {
      padding-bottom: 10px !important;
      padding-left: 5px !important; }

.col {
  /*=========================================================================
  // COLUMN SIZE - set single column size (.row > .col-x) {variables without px}
  // .add-col(column-size, parent-width, gap-size) {
  // * columns size
  // * parent element width (most .wrap)
  // * space beetween columns {optional | default "0"}
  == SNIPPETS: add-column
  =========================================================================*/ }
  .col-static--test {
    flex-basis: 300px; }

/**
 * Space
 */
.space {
  /* Default */
  /* Sizes */ }
  .space > * {
    margin: 20px 0; }
  .space--medium > * {
    margin: 18px 0; }

/*=========================================================================
// Generate color list class { _functions.less }
// .color-list(@color-name-array, @color-variable-prefix, @prefix:color)
=========================================================================*/
/*=========================================================================
|| WYSIWYG HTML output formatting
=========================================================================*/
.wysiwyg > *:first-child {
  margin-top: 0 !important; }

.wysiwyg > *:last-child {
  margin-bottom: 0 !important; }

.wysiwyg pre {
  font-family: monospace; }

/*=========================================================================
|| Plugin: wcag.less
===========================================================================
|| REQUIRED frontbox/wcag.js
=========================================================================*/
.js_wcag-focus {
  outline: 4px solid #0e5ca4; }
  .js_wcag-focus--ignore {
    outline: none !important; }

.wcag-skip {
  opacity: 0;
  position: absolute;
  left: -9999px;
  top: 0;
  background-color: #000;
  transition: opacity 0.2s;
  z-index: -10;
  padding: 10px 20px;
  color: #05386b; }
  .wcag-skip:before {
    content: '';
    bottom: 0;
    left: 50%;
    transform: translateY(100%);
    display: block;
    position: absolute; }

.js_wcag-focus .wcag-skip {
  left: 50%;
  top: 50%;
  outline: 4px solid #05386b;
  z-index: 9990;
  transform: translate(-50%, -50%); }
  .js_wcag-focus .wcag-skip:focus {
    opacity: 1; }

/*# sourceMappingURL=style.dev.css.map */
