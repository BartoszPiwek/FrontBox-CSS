/*!******************************************************************
Author      : Bartosz Piwek
Framework   : FrontBox-CSS
Url         : https://github.com/BartoszPiwek/FrontBox-CSS
Version     : 1.1.0
********************************************************************/
/* Text */
/**
 * Set style for selectors :hover :active :focus ( .add-hover(@css_code); )
 * - add class &--hover for parent element to trigger hover for child element
 * EXAMPLE:
    .foo {
        .add-hover({
            color: red;
        });
    }
 * OUTPUT:
    .foo--hover:hover .foo,
    .foo--hover:hover .foo,
    .foo--hover:hover .foo,
    .foo:hover,
    .foo:active,
    .foo:focus {
        background-color: red;
    }
 */
:root {
  --desktop: 1200;
  --tablet: 992;
  --fablet: 768;
  --mobile: 576;
  --headerStickyDesktop: 50;
  --headerStickyTablet: 40;
  --headerStickyMobile: 30; }

.row {
  display: flex;
  position: relative;
  flex-direction: row;
  flex-wrap: wrap; }
  .row > * {
    display: flex;
    position: relative;
    flex-direction: column;
    flex-grow: 0;
    flex-shrink: 0;
    height: auto !important;
    min-height: 1px; }
    .row > * > * {
      flex: 1 1 auto; }

/*
Wrap

Center the content in specify width.<br>
Add space around content (padding left/right)

Markup:
<div class="wrap">
 <div>content</div>
</div>

Emmet:
.wrap

Mixin:
wrap($max-width, $paddin-x);

Style guide: Flow.wrap
*/
/*=========================================================================
|| FILE: Animation
===========================================================================
|| Animate transitions from one CSS style configuration to another
=========================================================================*/
@keyframes animation_name {
  0% { }
  25% { }
  50% { }
  75% { }
  100% { } }

@keyframes animation_name {
  from { }
  to { } }

/*=========================================================================
|| Boxes
=========================================================================*/
/*=========================================================================
|| FILE: Footer
===========================================================================
|| Style for footer elements
=========================================================================*/
.footer {
  padding: 35px 0;
  overflow: hidden;
  background-color: #379683; }
  .footer__item > *:first-child {
    margin-top: 0; }
  .footer__item > *:last-child {
    margin-bottom: 0; }
  .footer__title {
    margin: 20px 0;
    color: #fff;
    font-size: 28px;
    font-weight: 200; }
  .footer__content {
    color: #000;
    font-size: 16px; }

/* Row */
.row-footer {
  width: calc(100% + 25px);
  margin-left: -25px !important; }
  .row-footer > *:not(.row-gap-ignore) {
    padding-left: 25px !important; }
  @media screen and (min-width: 768px) {
    .row-footer {
      width: calc(100% + 25px);
      margin-left: -25px !important;
      margin-bottom: -25px !important; }
      .row-footer > *:not(.row-space-ignore) {
        padding-bottom: 25px !important;
        padding-left: 25px !important; } }
  @media screen and (min-width: 992px) {
    .row-footer {
      width: calc(100% + 35px);
      margin-left: -35px !important;
      margin-bottom: -35px !important; }
      .row-footer > *:not(.row-space-ignore) {
        padding-bottom: 35px !important;
        padding-left: 35px !important; } }
  @media screen and (min-width: 1200px) {
    .row-footer {
      width: calc(100% + 45px);
      margin-left: -45px !important;
      margin-bottom: -45px !important; }
      .row-footer > *:not(.row-space-ignore) {
        padding-bottom: 45px !important;
        padding-left: 45px !important; } }

/**
 * Default style
 */
.icon {
  transition: fill 0.2s; }

/*=========================================================================
|| FILE: Index
===========================================================================
|| Style for most index elements
=========================================================================*/
/*=========================================================================
|| Links
=========================================================================*/
/*=========================================================================
|| Import plugins
=========================================================================*/
/*=========================================================================
|| Style HTML tables
=========================================================================*/
/*=========================================================================
|| FILE: Tools
===========================================================================
|| Create class using functions
=========================================================================*/
/*=========================================================================
|| WRAP - center element in asix x
|| = max width elemnt (end calculate = max-width + padding * 2)
|| = padding for responsive view
//=======================================================================*/
.wrap {
  max-width: 1064px;
  padding-right: 20px;
  padding-left: 20px;
  /**
   * Elements
   */
  /* Navigation bar */ }
  .wrap-navbar {
    max-width: 1064px;
    padding-right: 20px;
    padding-left: 20px; }

.row {
  /*=========================================================================
  // ROW GAP
  // Set space beetween columns in ASIX X
  .space-x(20px);
  // * space beetween columns
  //=========================================================================
  // ROW SPACE
  // Set space beetween columns in ASIX Y
  .space-y(20px);
  // * space beetween columns
  == WARNING: row will have 'overflow: hidden'
  //=======================================================================*/ }

.col {
  /*=========================================================================
  // COLUMN SIZE - set single column size (.row > .col-x) {variables without px}
  // .add-col(column-size, parent-width, gap-size) {
  // * columns size
  // * parent element width (most .wrap)
  // * space beetween columns {optional | default "0"}
  == SNIPPETS: add-column
  =========================================================================*/ }
  .col-static--test {
    flex-basis: 300px; }

/**
 * Space
 */
.space {
  /* Default */
  /* Sizes */ }
  .space > * {
    margin: 20px 0; }
  .space--medium > * {
    margin: 18px 0; }

/*=========================================================================
// Generate color list class { _functions.less }
// .color-list(@color-name-array, @color-variable-prefix, @prefix:color)
=========================================================================*/
/*=========================================================================
|| Create responsive utilities
=========================================================================*/
/* Only mobile size */
/* Fable size */
/* Tablet size */
/* Desktop size */
/*=========================================================================
|| WYSIWYG HTML output formatting
=========================================================================*/
.wysiwyg > *:first-child {
  margin-top: 0 !important; }

.wysiwyg > *:last-child {
  margin-bottom: 0 !important; }

.wysiwyg pre {
  font-family: monospace; }

/*
Buttons

Clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality

.btn-block - grow element width to 100%
.btn-disable - disables the button, it cannot be clicked
.btn-link - display only text without decorations

Markup:
<a class="btn {{modifier_class}}">Anchor element</a>
<button class="btn {{modifier_class}}">Button element</button>
<input class="btn {{modifier_class}}" type="button" value="Input Button" />

Style guide: Component.Buttons
*/
.btn {
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  height: 100%;
  padding: 14px 6px;
  transition: background-color 0.2s, color 0.2s, border-color 0.2s, transform 0.2s;
  border: 0;
  border-radius: 5px;
  background-color: #05386b;
  color: #fff;
  font-size: 14px;
  letter-spacing: 0.4px;
  text-align: center;
  cursor: pointer;
  user-select: none;
  -webkit-user-drag: none; }
  .btn--hover:hover .btn,
  .btn--hover:active .btn,
  .btn--hover:focus .btn,
  .btn--hover-active .btn,
  .btn--hover-active .btn,
  .btn--hover-active .btn, .btn:hover, .btn:active, .btn:focus {
    background-color: #053666; }
  .btn .icon {
    transition: transform 0.2s; }
  .btn:active {
    transform: translateY(1px); }
  .btn-disable, .btn[disabled] {
    pointer-events: none; }
    .btn-disable:before, .btn[disabled]:before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: inherit;
      opacity: 0.6;
      background: #000;
      pointer-events: none; }
  .btn-block {
    display: block;
    width: 100% !important;
    max-width: 100% !important; }
  .btn-link {
    border-color: transparent !important;
    background: transparent !important;
    color: #000 !important; }
    .btn-link:before, .btn-link:after {
      background: transparent !important; }

/*
Colors

Clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality

.btn--primary - colors
.btn--primary:hover - colors
.btn--secondary - colors
.btn--success - colors
.btn--danger - colors
.btn--warning - colors
.btn--info - colors
.btn--light - colors
.btn--dark - colors

Markup:
<a class="btn {{modifier_class}}">Anchor element</a>
<button class="btn {{modifier_class}}">Button element</button>
<input class="btn {{modifier_class}}" type="button" value="Input Button" />

Style guide: Component.Buttons.colors
*/
.btn--primary {
  background-color: #05386b; }
  .btn--primary--hover:hover .btn--primary,
  .btn--primary--hover:active .btn--primary,
  .btn--primary--hover:focus .btn--primary,
  .btn--primary--hover-active .btn--primary,
  .btn--primary--hover-active .btn--primary,
  .btn--primary--hover-active .btn--primary, .btn--primary:hover, .btn--primary:active, .btn--primary:focus {
    background-color: #053667; }

.btn--secondary {
  background-color: #379683; }

.btn--success {
  background-color: #28a745; }

.btn--danger {
  background-color: #dc3545; }

.btn--warning {
  background-color: #ffc107; }

.btn--info {
  background-color: #17a2b8; }

.btn--light {
  background-color: #f8f9fa; }

.btn--dark {
  background-color: false; }

/*
Size

.btn--large - size
.btn--wide - size
.btn--big - size
.btn--medium - size
.btn--small - size
.btn--tiny - size

Markup:
<a class="btn {{modifier_class}}">Anchor element</a>
<button class="btn {{modifier_class}}">Button element</button>
<input class="btn {{modifier_class}}" type="button" value="Input Button" />

Style guide: Component.Buttons.colors
*/
.btn--large {
  padding: 30px 50px; }

.btn--wide {
  padding-right: 60px;
  padding-left: 60px; }

.btn--big {
  padding: 30px 45px; }

.btn--medium {
  padding: 20px 20px; }

.btn--small {
  padding: 15px 20px; }

.btn--tiny {
  padding: 14px 12px; }

.js_cookies-information {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  transition: transform 0.2s, opacity 0.2s;
  opacity: 1;
  z-index: 6999;
  background-color: rgba(5, 56, 107, 0.9);
  padding: 8px 0;
  border-top: 2px solid #05386b; }
  .js_cookies-information__img {
    display: none; }
    @media screen and (min-width: 768px) {
      .js_cookies-information__img {
        position: absolute;
        display: block;
        bottom: 0;
        left: 0;
        width: 95px;
        height: auto; } }
  .js_cookies-information__text {
    font-size: 14px;
    text-align: justify;
    color: #fff; }
  .js_cookies-information__container {
    padding-right: 30px;
    position: relative; }
    @media screen and (min-width: 768px) {
      .js_cookies-information__container {
        padding-left: 115px; } }
  .js_cookies-information__exit {
    width: 20px;
    height: 20px;
    cursor: pointer;
    position: absolute;
    right: 0;
    top: 0;
    transition: transform 0.2s; }
    .js_cookies-information__exit:before, .js_cookies-information__exit:after {
      content: '';
      width: 100%;
      height: 2px;
      background-color: #fff;
      position: absolute;
      top: 50%;
      left: 0; }
    .js_cookies-information__exit:before {
      transform: rotate(45deg); }
    .js_cookies-information__exit:after {
      transform: rotate(-45deg); }
    .js_cookies-information__exit:hover, .js_cookies-information__exit:focus, .js_cookies-information__exit:active {
      transform: rotate(90deg); }
  .js_cookies-information--hide {
    transform: translate(0, 100%);
    opacity: 0; }

/*=========================================================================
|| Plugin: wcag.less
===========================================================================
|| REQUIRED frontbox/wcag.js
=========================================================================*/
.js_wcag-focus {
  outline: 4px solid #0e5ca4; }
  .js_wcag-focus--ignore {
    outline: none !important; }

.wcag-skip {
  opacity: 0;
  position: absolute;
  left: -9999px;
  top: 0;
  background-color: #000;
  transition: opacity 0.2s;
  z-index: -10;
  padding: 10px 20px;
  color: #05386b; }
  .wcag-skip:before {
    content: '';
    bottom: 0;
    left: 50%;
    transform: translateY(100%);
    display: block;
    position: absolute; }

.js_wcag-focus .wcag-skip {
  left: 50%;
  top: 50%;
  outline: 4px solid #05386b;
  z-index: 9990;
  transform: translate(-50%, -50%); }
  .js_wcag-focus .wcag-skip:focus {
    opacity: 1; }

/*# sourceMappingURL=style.dev.css.map */
