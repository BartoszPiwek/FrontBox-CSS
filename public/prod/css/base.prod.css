/* Text */
/*
Clearfix

Force an element to self-clear its children

Mixin:
cleartfix;

Style guide: Functions.clearfix
*/
/*
Fixed

Change to position fixed on iOS Safari while scrolling

Style guide: Fix.fixed
*/
.fix_fixed {
  position: fixed;
  -webkit-transform: translateZ(0);
  transform: translate3d(0, 0, 0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-perspective: 1000;
  transform: translateZ(0);
  perspective: 1000; }

/*
Grid

Grid CSS using flex

Mixin:
grid($grid-count, $breakpoints)

Mixin arguments:
$grid-count: number? : 12
$grid-breakpoints: { [key: string]: any }? : $breakpoints

Mixin example:
$breakpoint(
  xs: 0,
  sm: 576,
  md: 768,
  lg: 992,
}
@include grid(12, $breakpoints);

Mixin output:
<div class="row">
<div class="col-12 kss-item"></div>
</div>
<div class="row">
<div class="col-11 kss-item"></div>
<div class="col-1 kss-item"></div>
</div>

Style guide: Grid.generate
*/
/*
Row

Style guide: Grid.row
*/
/*
Group middle

Vertical center elements in content 

Emmet:
.group-middle>span{Text}+img{}

Style guide: Flow.group-middle
*/
.group-middle > * {
  vertical-align: middle !important;
  display: inline-block !important; }

/*

Holder

Mixin:
add_holder($width, $height);

Mixin arguments:
$width: number
$height: number

Mixin example:
.holder {
	@include add_holder(500, 1000);
}

Mixin output:
<div class="holder">
	<div class="holder__content">Content</div>
</div>

Mixin style:
@include add_holder-style;

Style guide: Functions.holder
*/
/**
 * Set style for selectors :hover :active :focus ( .add-hover(@css_code); )
 * - add class &--hover for parent element to trigger hover for child element
 * EXAMPLE:
    .foo {
        .add-hover({
            color: red;
        });
    }
 * OUTPUT:
    .foo--hover:hover .foo,
    .foo--hover:hover .foo,
    .foo--hover:hover .foo,
    .foo:hover,
    .foo:active,
    .foo:focus {
        background-color: red;
    }
 */
/*
Input Placeholder

Mixin:
@inlcude add_placeholder { @content };

Mixin example:
.placeholder {
	color: $color-secondary;
	@inlcude add_placeholder {
		color: $color-primary;
	}
}

Mixin output:
<input class="placeholder" placeholder="Simple input element">

Compatybility:
Chrome/Opera/Safari
Firefox 19+
Firefox 18-
IE 10+

Style guide: Functions.input-placeholder
*/
:root {
  --desktop: 1200;
  --tablet: 992;
  --fablet: 768;
  --mobile: 576;
  --headerStickyDesktop: 50;
  --headerStickyTablet: 40;
  --headerStickyMobile: 30;
  --scrollbarWidth: 0; }

/*

Position Center

Absolute center element in ASIX X/Y

Style guide: Blocks.position.center
*/
.block-center-absolute {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateY(-50%), translateX(-50%);
  text-align: center;
  display: block; }

/*
Scrollbar

Create custom themes for the browser's native scrollbars

Mixin:
scrollbar($size, $color-background, $color-thumb;

Mixin arguments:
$size : numberPixel : 10px
$color-background: color : color('black')
$color-thumb: color : color('primary')

Mixin example:
scrollbar('20px', $color-primary, $color-secondary);

Mixin output:
<div class="scrollbar">
	<div class="scrollbar__content"></div>
</div>

Style guide: Functions.clearfix
*/
/*
Square

Block square

Markup:
<div class="block-square">
	Content
</div>

Style guide: Blocks.square
*/
.block-square {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 100%; }
  .block-square > * {
    position: absolute;
    top: 0;
    left: 0; }

/*
Triangle

Generate triangle style

Mixin arguments:
$width: number
$height: number
$position: ['up','right','down','left'];
$color: color

mixin:
triangle($width, $height, $position, $color: '');

mixin_usage:
triangle(40px, 50px, 'up', color('primary'));
triangle(20px, 80px, 'left', color('secondary'));

mixin_output:
<div class="triangle-up"></div>
<div class="triangle-left"></div>

Style guide: Functions.triangle
*/
/*
VH Unit 

Het reliable CSS vh sizes with fallback (https://github.com/Hiswe/vh-check)

Mixin:
add_vh-unit($size, $property);

Mixin arguments:
$size : number? : 100
$property : CSSProperty? : 'height'

Mixin example:
add_vh-unit(50, 'height')

Style guide: Libs.vh-unit
*/
/*
Wrap

Center the content in specify width.<br>
Add space around content (padding left/right)

Markup:
<div class="wrap">
 <div>content</div>
</div>

Emmet:
.wrap

Mixin:
wrap($max-width, $paddin-x);

Style guide: Flow.wrap
*/
/*
YouTube

Embed YouTube iframe (default 21/9)

Style guide: Blocks.youtube
*/
.block-youtube {
  display: block;
  position: relative;
  width: 100%;
  height: 0;
  padding-top: 42.85714%;
  overflow: hidden; }
  .block-youtube iframe {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0; }
  .block-youtube--16x9 {
    padding-top: 56.25%; }
  .block-youtube--4x3 {
    padding-top: 75%; }
  .block-youtube--1x1 {
    padding-top: 100%; }

html.js_scroll-lock {
  position: fixed; }
  html.js_scroll-lock body {
    overflow: hidden; }

html:not(.js_scroll-lock) body {
  top: 0 !important; }

html,
body {
  width: 100%; }

body {
  position: relative;
  overflow-x: hidden;
  overflow-y: auto; }

.footer {
  margin-top: auto; }

.space > *:first-child {
  margin-top: 0; }

.space > *:last-child {
  margin-bottom: 0; }

*,
*:after,
*:before {
  box-sizing: border-box;
  margin: 0;
  padding: 0; }

iframe {
  border: 0; }

ol,
ul {
  list-style: none; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 16px;
  font-weight: normal; }

a {
  display: inline;
  color: inherit;
  text-decoration: none; }

iframe {
  border: 0; }

input[type='number'] {
  -moz-appearance: textfield; }
  input[type='number']::-webkit-inner-spin-button, input[type='number']::-webkit-outer-spin-button {
    margin: 0;
    -webkit-appearance: none; }

input[type='password']::-ms-reveal, input[type='password']::-ms-clear {
  display: none; }

label [for] {
  cursor: pointer; }

.container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  width: 100%; }
  .container__item {
    display: flex;
    flex: 0 1 auto;
    height: 100%; }
    .container__item--left {
      margin-right: auto; }
    .container__item--right {
      margin-left: auto; }
    .container__item--center {
      margin: 0 auto; }
      .container__item--center-absolute {
        display: block;
        position: absolute;
        top: 50%;
        left: 50%;
        height: auto;
        margin: 0 auto;
        transform: translate(-50%, -50%); }

@media screen and (min-width: 576px) {
  .sm_container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%; }
    .sm_container__item {
      display: flex;
      flex: 0 1 auto;
      height: 100%; }
      .sm_container__item--left {
        margin-right: auto; }
      .sm_container__item--right {
        margin-left: auto; }
      .sm_container__item--center {
        margin: 0 auto; }
        .sm_container__item--center-absolute {
          display: block;
          position: absolute;
          top: 50%;
          left: 50%;
          height: auto;
          margin: 0 auto;
          transform: translate(-50%, -50%); } }

@media screen and (min-width: 768px) {
  .md_container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%; }
    .md_container__item {
      display: flex;
      flex: 0 1 auto;
      height: 100%; }
      .md_container__item--left {
        margin-right: auto; }
      .md_container__item--right {
        margin-left: auto; }
      .md_container__item--center {
        margin: 0 auto; }
        .md_container__item--center-absolute {
          display: block;
          position: absolute;
          top: 50%;
          left: 50%;
          height: auto;
          margin: 0 auto;
          transform: translate(-50%, -50%); } }

@media screen and (min-width: 992px) {
  .lg_container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%; }
    .lg_container__item {
      display: flex;
      flex: 0 1 auto;
      height: 100%; }
      .lg_container__item--left {
        margin-right: auto; }
      .lg_container__item--right {
        margin-left: auto; }
      .lg_container__item--center {
        margin: 0 auto; }
        .lg_container__item--center-absolute {
          display: block;
          position: absolute;
          top: 50%;
          left: 50%;
          height: auto;
          margin: 0 auto;
          transform: translate(-50%, -50%); } }

@media screen and (min-width: 1200px) {
  .xl_container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%; }
    .xl_container__item {
      display: flex;
      flex: 0 1 auto;
      height: 100%; }
      .xl_container__item--left {
        margin-right: auto; }
      .xl_container__item--right {
        margin-left: auto; }
      .xl_container__item--center {
        margin: 0 auto; }
        .xl_container__item--center-absolute {
          display: block;
          position: absolute;
          top: 50%;
          left: 50%;
          height: auto;
          margin: 0 auto;
          transform: translate(-50%, -50%); } }

@media screen and (min-width: 1366px) {
  .hd_container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%; }
    .hd_container__item {
      display: flex;
      flex: 0 1 auto;
      height: 100%; }
      .hd_container__item--left {
        margin-right: auto; }
      .hd_container__item--right {
        margin-left: auto; }
      .hd_container__item--center {
        margin: 0 auto; }
        .hd_container__item--center-absolute {
          display: block;
          position: absolute;
          top: 50%;
          left: 50%;
          height: auto;
          margin: 0 auto;
          transform: translate(-50%, -50%); } }

@media screen and (min-width: 1440px) {
  .whd_container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%; }
    .whd_container__item {
      display: flex;
      flex: 0 1 auto;
      height: 100%; }
      .whd_container__item--left {
        margin-right: auto; }
      .whd_container__item--right {
        margin-left: auto; }
      .whd_container__item--center {
        margin: 0 auto; }
        .whd_container__item--center-absolute {
          display: block;
          position: absolute;
          top: 50%;
          left: 50%;
          height: auto;
          margin: 0 auto;
          transform: translate(-50%, -50%); } }

.js_expand__container--active {
  height: 100% !important; }

.js_expand__container--close {
  height: 0 !important; }

.js_transitionHeight {
  transition: height 0.2s !important; }

.wrap {
  margin-right: auto;
  margin-left: auto;
  width: 100%; }

@media screen and (max-width: 767px) {
  .is_burger-menu--visible {
    display: block; } }

@media screen and (min-width: 768px) {
  .is_burger-menu--visible {
    display: none; } }

@media screen and (max-width: 767px) {
  .is_burger-menu--hide {
    display: none; } }

@media screen and (min-width: 768px) {
  .is_burger-menu--hide {
    display: block; } }
