/* Text */
/*
Clearfix

Force an element to self-clear its children

Mixin:
cleartfix;

Style guide: Functions.clearfix
*/
/*
Fixed

Change to position fixed on iOS Safari while scrolling

Style guide: Fix.fixed
*/
.fix_fixed, html.js_sticky-header:not(.js_menu-active) .header, html.js_menu-active .burger-menu {
  position: fixed;
  -webkit-transform: translateZ(0);
  transform: translate3d(0, 0, 0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-perspective: 1000;
  transform: translateZ(0);
  perspective: 1000; }

/*
Grid

Grid CSS using flex

Mixin:
grid($grid-count, $breakpoints)

Mixin arguments:
$grid-count: number? : 12
$grid-breakpoints: { [key: string]: any }? : $breakpoints

Mixin example:
$breakpoint(
  xs: 0,
  sm: 576,
  md: 768,
  lg: 992,
}
@include grid(12, $breakpoints);

Mixin output:
<div class="row">
<div class="col-12 kss-item"></div>
</div>
<div class="row">
<div class="col-11 kss-item"></div>
<div class="col-1 kss-item"></div>
</div>

Style guide: Grid.generate
*/
/*
Row

Style guide: Grid.row
*/
/*
Group middle

Vertical center elements in content 

Emmet:
.group-middle>span{Text}+img{}

Style guide: Flow.group-middle
*/
.group-middle > * {
  vertical-align: middle !important;
  display: inline-block !important; }

/*

Holder

Mixin:
add_holder($width, $height);

Mixin arguments:
$width: number
$height: number

Mixin example:
.holder {
	@include add_holder(500, 1000);
}

Mixin output:
<div class="holder">
	<div class="holder__content">Content</div>
</div>

Mixin style:
@include add_holder-style;

Style guide: Functions.holder
*/
/**
 * Set style for selectors :hover :active :focus ( .add-hover(@css_code); )
 * - add class &--hover for parent element to trigger hover for child element
 * EXAMPLE:
    .foo {
        .add-hover({
            color: red;
        });
    }
 * OUTPUT:
    .foo--hover:hover .foo,
    .foo--hover:hover .foo,
    .foo--hover:hover .foo,
    .foo:hover,
    .foo:active,
    .foo:focus {
        background-color: red;
    }
 */
/*
Input Placeholder

Mixin:
@inlcude add_placeholder { @content };

Mixin example:
.placeholder {
	color: $color-secondary;
	@inlcude add_placeholder {
		color: $color-primary;
	}
}

Mixin output:
<input class="placeholder" placeholder="Simple input element">

Compatybility:
Chrome/Opera/Safari
Firefox 19+
Firefox 18-
IE 10+

Style guide: Functions.input-placeholder
*/
:root {
  --desktop: 1200;
  --tablet: 992;
  --fablet: 768;
  --mobile: 576;
  --headerStickyDesktop: 50;
  --headerStickyTablet: 40;
  --headerStickyMobile: 30; }

/*

Position Center

Absolute center element in ASIX X/Y

Style guide: Blocks.position.center
*/
.block-center-absolute {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateY(-50%), translateX(-50%);
  text-align: center;
  display: block; }

/*
Scrollbar

Create custom themes for the browser's native scrollbars

Mixin:
scrollbar($size, $color-background, $color-thumb;

Mixin arguments:
$size : numberPixel : 10px
$color-background: color : color('black')
$color-thumb: color : color('primary')

Mixin example:
scrollbar('20px', $color-primary, $color-secondary);

Mixin output:
<div class="scrollbar">
	<div class="scrollbar__content"></div>
</div>

Style guide: Functions.clearfix
*/
/*
Square

Block square

Markup:
<div class="block-square">
	Content
</div>

Style guide: Blocks.square
*/
.block-square {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 100%; }
  .block-square > * {
    position: absolute;
    top: 0;
    left: 0; }

/*
Triangle

Generate triangle style

Mixin arguments:
$width: number
$height: number
$position: ['up','right','down','left'];
$color: color

mixin:
triangle($width, $height, $position, $color: '');

mixin_usage:
triangle(40px, 50px, 'up', color('primary'));
triangle(20px, 80px, 'left', color('secondary'));

mixin_output:
<div class="triangle-up"></div>
<div class="triangle-left"></div>

Style guide: Functions.triangle
*/
/*
VH Unit 

Het reliable CSS vh sizes with fallback (https://github.com/Hiswe/vh-check)

Mixin:
add_vh-unit($size, $property);

Mixin arguments:
$size : number? : 100
$property : CSSProperty? : 'height'

Mixin example:
add_vh-unit(50, 'height')

Style guide: Libs.vh-unit
*/
/*
Wrap

Center the content in specify width.<br>
Add space around content (padding left/right)

Markup:
<div class="wrap">
 <div>content</div>
</div>

Emmet:
.wrap

Mixin:
wrap($max-width, $paddin-x);

Style guide: Flow.wrap
*/
/*
YouTube

Embed YouTube iframe (default 21/9)

Style guide: Blocks.youtube
*/
.block-youtube {
  display: block;
  position: relative;
  width: 100%;
  height: 0;
  padding-top: 42.85714%;
  overflow: hidden; }
  .block-youtube iframe {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0; }
  .block-youtube--16x9 {
    padding-top: 56.25%; }
  .block-youtube--4x3 {
    padding-top: 75%; }
  .block-youtube--1x1 {
    padding-top: 100%; }

.kss-style {
  color: #444;
  font-family: Helvetica, "Helvetica Neue", Arial, sans-serif;
  font-size: 16px;
  line-height: 24px; }
  .kss-style a {
    color: #0645ad;
    text-decoration: none;
    transition-property: color;
    transition-duration: 0.5s; }
    .kss-style a:visited {
      color: #0645ad; }
    .kss-style a:hover, .kss-style a:focus {
      color: #2272f7; }
    .kss-style a:active {
      color: #faa700; }
    .kss-style a:hover, .kss-style a:active {
      outline: 0; }
  .kss-style p {
    margin: 12px 0 24px 0; }
  .kss-style h1,
  .kss-style h2,
  .kss-style h3,
  .kss-style h4,
  .kss-style h5,
  .kss-style h6 {
    margin: 24px 0 0 0;
    font-family: Helvetica, "Helvetica Neue", Arial, sans-serif;
    color: #111;
    line-height: 1.15em; }
  .kss-style h4,
  .kss-style h5,
  .kss-style h6 {
    font-weight: bold; }
  .kss-style h1 {
    font-size: 40px; }
  .kss-style h2 {
    font-size: 36px; }
  .kss-style h3 {
    font-size: 34px; }
  .kss-style h4 {
    font-size: 32px; }
  .kss-style h5 {
    font-size: 30px; }
  .kss-style h6 {
    font-size: 28px; }
  .kss-style blockquote {
    color: #666;
    margin: 0;
    padding-left: 24px;
    border-left: 0.5em #d9d9d9 solid; }
  .kss-style hr {
    display: block;
    height: 2px;
    border: 0;
    border-top: 1px solid #dddddd;
    border-bottom: 1px solid #e6e6e6;
    margin: 24px 0;
    padding: 0; }
  .kss-style pre,
  .kss-style code,
  .kss-style kbd,
  .kss-style samp {
    font-family: Menlo, "Ubuntu Mono", "Lucida Console", "Courier New", Courier, monospace;
    color: #2b2b2b;
    font-size: 1em; }
  .kss-style pre {
    white-space: pre;
    overflow: scroll; }
  .kss-style ins {
    color: #111;
    background: #ff9;
    text-decoration: none; }
  .kss-style mark {
    color: #111;
    background: #ff0;
    font-weight: bold; }
  .kss-style sub,
  .kss-style sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline; }
  .kss-style sup {
    top: -0.5em; }
  .kss-style sub {
    bottom: -0.25em; }
  .kss-style ul,
  .kss-style ol {
    margin: 24px 0;
    padding: 0 0 0 24px; }
  .kss-style li p:last-child {
    margin: 0; }
  .kss-style dd {
    margin: 0 0 0 24px; }
  .kss-style img {
    max-width: 100%;
    border: 0;
    -ms-interpolation-mode: bicubic;
    vertical-align: middle; }
  .kss-style table {
    border-collapse: collapse;
    border-spacing: 0; }
  .kss-style td {
    vertical-align: top; }
  @media print {
    .kss-style a,
    .kss-style a:visited {
      text-decoration: underline; }
    .kss-style hr {
      height: 1px;
      border: 0;
      border-bottom: 1px solid black; }
    .kss-style a[href]:after {
      content: " (" attr(href) ")"; }
    .kss-style a[href^='javascript:']:after,
    .kss-style a[href^='#']:after {
      content: ''; }
    .kss-style abbr[title]:after {
      content: " (" attr(title) ")"; }
    .kss-style pre,
    .kss-style blockquote {
      border: 1px solid #999;
      padding-right: 1em;
      page-break-inside: avoid; }
    .kss-style tr,
    .kss-style img {
      page-break-inside: avoid; }
    .kss-style img {
      max-width: 100% !important; }
    .kss-style p,
    .kss-style h2,
    .kss-style h3 {
      orphans: 3;
      widows: 3; }
    .kss-style h2,
    .kss-style h3 {
      page-break-after: avoid; } }

#kss-node {
  margin: 0;
  padding: 20px;
  background: #fff; }
  #kss-node.kss-fullscreen-mode .kss-sidebar,
  #kss-node.kss-fullscreen-mode .kss-section:not(.is-fullscreen),
  #kss-node.kss-fullscreen-mode .kss-github {
    display: none; }
  @media screen and (min-width: 769px) {
    #kss-node {
      padding: 0; }
      #kss-node .kss-main,
      #kss-node .kss-sidebar {
        float: left;
        margin-right: -100%;
        box-sizing: border-box; } }
  #kss-node .kss-main {
    width: 100%;
    margin: 0 auto; }
    @media screen and (min-width: 769px) {
      #kss-node .kss-main {
        width: 80%;
        margin-left: 20%;
        padding: 0 20px 0 30px; } }
  #kss-node .kss-sidebar {
    border-bottom: 1px solid #ddd; }
    @media screen and (min-width: 769px) {
      #kss-node .kss-sidebar {
        position: fixed;
        width: 20%;
        height: 100%;
        overflow: auto;
        padding: 0 10px 0 20px;
        border-bottom: 0;
        background-image: url(noise-low.png), -ms-radial-gradient(#fff, #eee);
        background-image: url(noise-low.png), -o-radial-gradient(#fff, #eee);
        background-image: url(noise-low.png), -webkit-radial-gradient(#fff, #eee);
        background-image: url(noise-low.png), radial-gradient(#fff, #eee);
        box-shadow: inset -10px 0 10px -10px rgba(0, 0, 0, 0.7); } }

#kss-node .kss-doc-title {
  margin: 0; }
  @media screen and (min-width: 769px) {
    #kss-node .kss-doc-title {
      font-size: 1.5em; } }

@media screen and (min-width: 769px) {
  #kss-node .kss-header,
  #kss-node .kss-nav {
    margin-top: 2em; } }

#kss-node .kss-nav__menu {
  margin-top: 12px;
  margin-bottom: 12px;
  padding: 0;
  list-style-type: none; }

#kss-node .kss-nav__menu-item {
  display: inline-block;
  padding-right: 24px; }
  @media screen and (min-width: 769px) {
    #kss-node .kss-nav__menu-item {
      display: list-item;
      padding-right: 0; } }

#kss-node .kss-nav__menu-link {
  position: relative;
  display: inline-block; }
  @media screen and (min-width: 769px) {
    #kss-node .kss-nav__menu-link:before {
      content: ' ';
      position: absolute;
      left: -20px;
      width: 0;
      height: 100%;
      background-color: rgba(0, 0, 0, 0); } }
  #kss-node .kss-nav__menu-link.is-in-viewport:before {
    background-color: #000;
    width: 5px;
    transition: background-color 0.4s, width 0.6s; }

#kss-node .kss-nav__menu-child {
  display: none; }
  @media screen and (min-width: 769px) {
    #kss-node .kss-nav__menu-child {
      display: block;
      list-style-type: none;
      margin: 0;
      padding: 0; }
      #kss-node .kss-nav__menu-child li:first-child {
        margin-top: 10px;
        border-top: 1px solid #ccc;
        padding: 10px 0 0; }
      #kss-node .kss-nav__menu-child li:last-child {
        margin-bottom: 10px;
        border-bottom: 1px solid #ccc;
        padding: 0 0 10px; } }

#kss-node .kss-nav__ref {
  color: #333;
  font-weight: bold; }
  #kss-node .kss-nav__ref:after {
    content: ' '; }

#kss-node .kss-nav__ref-child {
  font-weight: normal; }

#kss-node {
  /*
 * Visual Studio 2015 dark style
 * Author: Nicolas LLOBERA <nllobera@gmail.com>
 */
  /*.hljs-code {
  font-family:'Monospace';
}*/ }
  #kss-node .kss-section {
    margin-bottom: 48px; }
    #kss-node .kss-section.is-fullscreen {
      position: fixed !important;
      top: 0 !important;
      left: 0 !important;
      right: 0 !important;
      bottom: 0 !important;
      width: 100% !important;
      height: 100% !important;
      margin: 0 !important;
      min-width: 0 !important;
      max-width: none !important;
      min-height: 0 !important;
      max-height: none !important;
      box-sizing: border-box !important;
      object-fit: contain !important;
      transform: none !important;
      overflow: auto !important;
      padding: 20px; }
  #kss-node .kss-title {
    margin-bottom: 0; }
  #kss-node .is-fullscreen .kss-title {
    margin-top: 0; }
  #kss-node .kss-title__ref {
    display: block;
    font-size: 16px;
    line-height: 16px;
    color: #666; }
    #kss-node .kss-title__ref:before {
      content: 'Section '; }
  #kss-node .kss-title__permalink {
    display: block;
    color: #000;
    text-decoration: none; }
    #kss-node .kss-title__permalink:hover, #kss-node .kss-title__permalink:focus, #kss-node .kss-title__permalink:active {
      color: #0645ad; }
      @media screen and (min-width: 607px) {
        #kss-node .kss-title__permalink:hover .kss-title__permalink-hash, #kss-node .kss-title__permalink:focus .kss-title__permalink-hash, #kss-node .kss-title__permalink:active .kss-title__permalink-hash {
          display: inline; } }
  #kss-node .kss-title__permalink-hash {
    display: none;
    color: #ccc; }
  #kss-node .kss-toolbar {
    margin: 6px 0 24px;
    display: inline-block;
    border: 1px solid #eee;
    background-color: #f9f9f9;
    border-right-color: #e0e0e0;
    border-bottom-color: #e0e0e0;
    line-height: 1;
    padding: 3px; }
    #kss-node .kss-toolbar a {
      box-sizing: content-box;
      display: inline-block;
      width: 16px;
      height: 16px;
      padding: 3px;
      vertical-align: top;
      position: relative;
      overflow: visible; }
      #kss-node .kss-toolbar a + a {
        margin-left: 6px; }
      #kss-node .kss-toolbar a .kss-toolbar__icon-fill {
        fill: #ccc; }
      #kss-node .kss-toolbar a svg.on {
        display: none; }
      #kss-node .kss-toolbar a:focus, #kss-node .kss-toolbar a:hover {
        border-color: #000; }
        #kss-node .kss-toolbar a:focus .kss-toolbar__icon-fill, #kss-node .kss-toolbar a:hover .kss-toolbar__icon-fill {
          fill: #000; }
  #kss-node .kss-toolbar__tooltip {
    position: absolute;
    z-index: 1;
    display: inline-block;
    bottom: 100%;
    left: -10px;
    margin-bottom: 5px;
    border: solid 1px #666;
    padding: 8px 10px 6px;
    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.25);
    white-space: nowrap;
    color: #000;
    background: #fff;
    cursor: help;
    opacity: 0;
    transition: opacity 0.25s;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
    word-wrap: normal; }
    #kss-node .kss-toolbar__tooltip:before, #kss-node .kss-toolbar__tooltip:after {
      content: '';
      position: absolute;
      bottom: -8px;
      left: 15px;
      width: 0;
      height: 0;
      border-width: 7px 5px 0;
      border-color: #666 transparent;
      border-style: solid; }
    #kss-node .kss-toolbar__tooltip:after {
      bottom: -6px;
      border-top-color: #fff; }
  #kss-node a:focus > .kss-toolbar__tooltip,
  #kss-node a:hover > .kss-toolbar__tooltip {
    opacity: 1;
    clip: auto;
    height: auto;
    width: auto;
    overflow: visible; }
  #kss-node .is-fullscreen .kss-toolbar a[data-kss-fullscreen],
  #kss-node.kss-guides-mode .kss-toolbar a[data-kss-guides],
  #kss-node.kss-markup-mode .kss-toolbar a[data-kss-markup] {
    border-color: #666;
    background-color: #666; }
    #kss-node .is-fullscreen .kss-toolbar a[data-kss-fullscreen] .kss-toolbar__icon-fill,
    #kss-node.kss-guides-mode .kss-toolbar a[data-kss-guides] .kss-toolbar__icon-fill,
    #kss-node.kss-markup-mode .kss-toolbar a[data-kss-markup] .kss-toolbar__icon-fill {
      fill: #fff; }
    #kss-node .is-fullscreen .kss-toolbar a[data-kss-fullscreen] svg.on,
    #kss-node.kss-guides-mode .kss-toolbar a[data-kss-guides] svg.on,
    #kss-node.kss-markup-mode .kss-toolbar a[data-kss-markup] svg.on {
      display: block; }
    #kss-node .is-fullscreen .kss-toolbar a[data-kss-fullscreen] svg.off,
    #kss-node.kss-guides-mode .kss-toolbar a[data-kss-guides] svg.off,
    #kss-node.kss-markup-mode .kss-toolbar a[data-kss-markup] svg.off {
      display: none; }
  #kss-node .kss-parameters {
    display: table;
    list-style-type: none;
    margin-top: 0;
    margin-left: 0;
    padding-left: 0; }
  #kss-node .kss-parameters__title {
    font-weight: bold; }
  #kss-node .kss-parameters__item {
    display: table-row; }
  #kss-node .kss-parameters__name {
    display: table-cell;
    padding-right: 20px;
    white-space: nowrap; }
  #kss-node .kss-parameters__description {
    display: table-cell; }
  #kss-node .kss-parameters__default-value code {
    white-space: nowrap; }
  #kss-node .kss-modifier__wrapper {
    border: 1px solid #ccc;
    padding: 0; }
  #kss-node .is-fullscreen .kss-modifier__wrapper {
    margin-left: -20px;
    margin-right: -20px;
    padding-left: 0;
    padding-right: 0;
    border: none; }
  #kss-node .kss-modifier__heading {
    padding: 10px;
    border-bottom: 1px solid #ccc;
    background-color: #eee;
    font-weight: bold; }
  #kss-node .is-fullscreen .kss-modifier__heading {
    margin: 0 20px 10px;
    border: 1px solid #ccc; }
  #kss-node .kss-modifier__default-name {
    font-weight: bold;
    margin-bottom: 12px; }
  #kss-node .is-fullscreen .kss-modifier__default-name {
    margin-left: 20px;
    margin-right: 20px; }
  #kss-node .kss-modifier__name {
    float: left;
    padding-right: 10px;
    font-weight: bold; }
  #kss-node .is-fullscreen .kss-modifier__name {
    margin-left: 20px; }
  #kss-node .kss-modifier__description {
    margin-bottom: 12px; }
  #kss-node .is-fullscreen .kss-modifier__description {
    margin-right: 20px; }
  #kss-node .kss-modifier__example {
    clear: left;
    border: 2px dashed transparent;
    position: relative;
    z-index: 0;
    padding: 10px;
    max-width: 100%;
    height: auto;
    width: auto;
    vertical-align: top;
    background-image: linear-gradient(45deg, #c4c4c4 25%, transparent 25%, transparent 75%, #c4c4c4 75%, #c4c4c4), linear-gradient(45deg, #c4c4c4 25%, transparent 25%, transparent 75%, #c4c4c4 75%, #c4c4c4);
    background-position: 0 0, 10px 10px;
    background-size: 20px 20px; }
    #kss-node .kss-modifier__example:last-child {
      margin-bottom: 0; }
    #kss-node .kss-modifier__example * {
      outline: 1px solid blue; }
  #kss-node.kss-guides-mode .kss-modifier__example:before, #kss-node.kss-guides-mode .kss-modifier__example:after,
  #kss-node.kss-guides-mode .kss-modifier__example-footer:before,
  #kss-node.kss-guides-mode .kss-modifier__example-footer:after {
    z-index: -1;
    box-sizing: border-box;
    content: '';
    position: absolute;
    width: 5px;
    height: 5px;
    border: 2px solid #000; }
  #kss-node.kss-guides-mode .kss-modifier__example {
    border-color: #000; }
    #kss-node.kss-guides-mode .kss-modifier__example:before {
      top: -5px;
      left: -5px;
      border-top: 0;
      border-left: 0; }
    #kss-node.kss-guides-mode .kss-modifier__example:after {
      top: -5px;
      right: -5px;
      border-top: 0;
      border-right: 0; }
  #kss-node.kss-guides-mode.kss-fullscreen-mode .kss-modifier__example:before {
    left: auto;
    right: 0; }
  #kss-node.kss-guides-mode.kss-fullscreen-mode .kss-modifier__example:after {
    right: auto;
    left: 0; }
  #kss-node .kss-modifier__example-footer {
    clear: both; }
  #kss-node.kss-guides-mode .kss-modifier__example-footer:before {
    bottom: -5px;
    left: -5px;
    border-bottom: 0;
    border-left: 0; }
  #kss-node.kss-guides-mode .kss-modifier__example-footer:after {
    bottom: -5px;
    right: -5px;
    border-right: 0;
    border-bottom: 0; }
  #kss-node.kss-guides-mode.kss-fullscreen-mode .kss-modifier__example-footer:before {
    left: auto;
    right: 0; }
  #kss-node.kss-guides-mode.kss-fullscreen-mode .kss-modifier__example-footer:after {
    right: auto;
    left: 0; }
  #kss-node .kss-markup {
    margin: 24px 0;
    border: 1px solid #ccc; }
    #kss-node .kss-markup[open] summary {
      border-bottom: 1px solid #ccc; }
    #kss-node .kss-markup summary {
      padding-left: 10px; }
    #kss-node .kss-markup pre {
      margin: 0; }
  #kss-node .kss-colors {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    justify-content: flex-start;
    align-items: stretch;
    flex-wrap: wrap;
    margin: 0 -0.5em; }
    #kss-node .kss-colors > * {
      flex: 0 0 auto;
      padding: 0 0.5em;
      margin-bottom: 1em;
      width: 16em; }
    #kss-node .kss-colors .kss-color {
      height: 100%; }
  #kss-node .kss-color {
    background: #fff;
    border: 1px solid #ccc;
    margin: 0;
    padding: 0; }
    #kss-node .kss-color-figure {
      height: 3em; }
    #kss-node .kss-color-caption {
      padding: 0.5em; }
    #kss-node .kss-color-name {
      display: block;
      font-weight: bold;
      color: #444; }
    #kss-node .kss-color-code {
      display: block;
      color: #666; }
    #kss-node .kss-color-desc {
      font-size: 0.875em; }
  #kss-node .kss-source {
    font-size: 80%; }
  #kss-node .kss-github {
    display: none; }
    @media screen and (min-width: 501px) {
      #kss-node .kss-github {
        display: block;
        position: absolute;
        top: 0;
        right: 0; } }
    #kss-node .kss-github img {
      border: 0; }
  #kss-node pre.hljs code {
    color: inherit; }
  #kss-node .hljs {
    display: block;
    overflow-x: auto;
    padding: 0.5em;
    background: #1E1E1E;
    color: #DCDCDC; }
  #kss-node .hljs-keyword,
  #kss-node .hljs-literal,
  #kss-node .hljs-symbol,
  #kss-node .hljs-name {
    color: #569CD6; }
  #kss-node .hljs-link {
    color: #569CD6;
    text-decoration: underline; }
  #kss-node .hljs-built_in,
  #kss-node .hljs-type {
    color: #4EC9B0; }
  #kss-node .hljs-number,
  #kss-node .hljs-class {
    color: #B8D7A3; }
  #kss-node .hljs-string,
  #kss-node .hljs-meta-string {
    color: #D69D85; }
  #kss-node .hljs-regexp,
  #kss-node .hljs-template-tag {
    color: #9A5334; }
  #kss-node .hljs-subst,
  #kss-node .hljs-function,
  #kss-node .hljs-title,
  #kss-node .hljs-params,
  #kss-node .hljs-formula {
    color: #DCDCDC; }
  #kss-node .hljs-comment,
  #kss-node .hljs-quote {
    color: #57A64A;
    font-style: italic; }
  #kss-node .hljs-doctag {
    color: #608B4E; }
  #kss-node .hljs-meta,
  #kss-node .hljs-meta-keyword,
  #kss-node .hljs-tag {
    color: #9B9B9B; }
  #kss-node .hljs-variable,
  #kss-node .hljs-template-variable {
    color: #BD63C5; }
  #kss-node .hljs-attr,
  #kss-node .hljs-attribute,
  #kss-node .hljs-builtin-name {
    color: #9CDCFE; }
  #kss-node .hljs-section {
    color: gold; }
  #kss-node .hljs-emphasis {
    font-style: italic; }
  #kss-node .hljs-strong {
    font-weight: bold; }
  #kss-node .hljs-bullet,
  #kss-node .hljs-selector-tag,
  #kss-node .hljs-selector-id,
  #kss-node .hljs-selector-class,
  #kss-node .hljs-selector-attr,
  #kss-node .hljs-selector-pseudo {
    color: #D7BA7D; }
  #kss-node .hljs-addition {
    background-color: #144212;
    display: inline-block;
    width: 100%; }
  #kss-node .hljs-deletion {
    background-color: #600;
    display: inline-block;
    width: 100%; }

.debug-iframe {
  background-color: #ffffff;
  margin: 0 auto;
  border: 0;
  animation-name: debug-responsive;
  animation-duration: 4s;
  animation-play-state: running;
  animation-timing-function: ease-out;
  animation-delay: 0s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-fill-mode: none; }

.debug-iframe-content {
  height: auto !important;
  min-height: auto !important;
  max-height: 100% !important;
  display: flex;
  justify-content: center;
  align-items: center; }

@keyframes debug-responsive {
  from {
    width: 100%; }
  to {
    width: 320px; } }

/*=========================================================================
|| FILE: Animation
===========================================================================
|| Animate transitions from one CSS style configuration to another
=========================================================================*/
@keyframes animation_name {
  0% { }
  25% { }
  50% { }
  75% { }
  100% { } }

@keyframes animation_name {
  from { }
  to { } }

/*=========================================================================
|| Boxes
=========================================================================*/
/*=========================================================================
|| FILE: Footer
===========================================================================
|| Style for footer elements
=========================================================================*/
.footer {
  padding: 35px 0;
  overflow: hidden;
  background-color: #05386b; }
  .footer__item > *:first-child {
    margin-top: 0; }
  .footer__item > *:last-child {
    margin-bottom: 0; }
  .footer__title {
    margin: 20px 0;
    color: #fff;
    font-size: 28px;
    font-weight: 200; }
  .footer__content {
    color: #000;
    font-size: 16px; }

.row-footer {
  width: calc(100% + 25px);
  margin-left: -25px !important; }
  .row-footer > *:not(.row-gap-ignore) {
    padding-left: 25px !important; }
  @media screen and (min-width: 768px) {
    .row-footer {
      width: calc(100% + 25px);
      margin-left: -25px !important;
      margin-bottom: -25px !important; }
      .row-footer > *:not(.row-space-ignore) {
        padding-bottom: 25px !important;
        padding-left: 25px !important; } }
  @media screen and (min-width: 992px) {
    .row-footer {
      width: calc(100% + 35px);
      margin-left: -35px !important;
      margin-bottom: -35px !important; }
      .row-footer > *:not(.row-space-ignore) {
        padding-bottom: 35px !important;
        padding-left: 35px !important; } }
  @media screen and (min-width: 1200px) {
    .row-footer {
      width: calc(100% + 45px);
      margin-left: -45px !important;
      margin-bottom: -45px !important; }
      .row-footer > *:not(.row-space-ignore) {
        padding-bottom: 45px !important;
        padding-left: 45px !important; } }

.hero {
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover; }

/**
 * Default style
 */
.icon {
  transition: fill 0.2s; }

/*=========================================================================
|| FILE: Index
===========================================================================
|| Style for most index elements
=========================================================================*/
/*=========================================================================
|| Links
=========================================================================*/
/**
 * Base
 */
.list__icon {
  display: none; }

.list--same-size .list__item {
  flex: 1 0 auto !important; }

@media screen and (min-width: 768px) {
  .nav-header-menu {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap; } }

.nav-header-menu > .nav-header-menu__item {
  display: block;
  margin-bottom: 20px;
  padding: 10px 6px;
  transition: color 0.2s;
  color: #000;
  text-align: center; }
  .nav-header-menu > .nav-header-menu__item:last-child {
    margin-bottom: 0 !important; }
  @media screen and (min-width: 768px) {
    .nav-header-menu > .nav-header-menu__item {
      display: flex;
      flex: 1 1 auto;
      align-items: center;
      justify-content: center;
      margin-right: 16px;
      margin-bottom: 0 !important;
      padding: 0; }
      .nav-header-menu > .nav-header-menu__item:last-child {
        margin-right: 0 !important; } }
  .nav-header-menu > .nav-header-menu__item--hover:hover .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover:active .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover:focus .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover-active .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover-active .nav-header-menu > .nav-header-menu__item,
  .nav-header-menu > .nav-header-menu__item--hover-active .nav-header-menu > .nav-header-menu__item, .nav-header-menu > .nav-header-menu__item:hover, .nav-header-menu > .nav-header-menu__item:active, .nav-header-menu > .nav-header-menu__item:focus {
    color: #05386b; }

/*=========================================================================
|| Import plugins
=========================================================================*/
/*=========================================================================
|| Style HTML tables
=========================================================================*/
/*=========================================================================
|| FILE: Tools
===========================================================================
|| Create class using functions
=========================================================================*/
/*=========================================================================
|| WRAP - center element in asix x
|| = max width elemnt (end calculate = max-width + padding * 2)
|| = padding for responsive view
//=======================================================================*/
.wrap {
  max-width: 1064px;
  padding-right: 20px;
  padding-left: 20px;
  /**
   * Elements
   */
  /* Navigation bar */ }
  .wrap-navbar {
    max-width: 1064px;
    padding-right: 20px;
    padding-left: 20px; }

.row {
  /*=========================================================================
  // ROW GAP
  // Set space beetween columns in ASIX X
  .space-x(20px);
  // * space beetween columns
  //=========================================================================
  // ROW SPACE
  // Set space beetween columns in ASIX Y
  .space-y(20px);
  // * space beetween columns
  == WARNING: row will have 'overflow: hidden'
  //=======================================================================*/ }

.col {
  /*=========================================================================
  // COLUMN SIZE - set single column size (.row > .col-x) {variables without px}
  // .add-col(column-size, parent-width, gap-size) {
  // * columns size
  // * parent element width (most .wrap)
  // * space beetween columns {optional | default "0"}
  == SNIPPETS: add-column
  =========================================================================*/ }
  .col-static--test {
    flex-basis: 300px; }

/**
 * Space
 */
.space {
  /* Default */
  /* Sizes */ }
  .space > * {
    margin: 20px 0; }
  .space--medium > * {
    margin: 18px 0; }

/*=========================================================================
// Generate color list class { _functions.less }
// .color-list(@color-name-array, @color-variable-prefix, @prefix:color)
=========================================================================*/
.height-full {
  height: 100vh;
  height: calc(100vh - var(--vh-offset, 0px)); }

/*=========================================================================
|| Create responsive utilities
=========================================================================*/
/* Only mobile size */
/* Fable size */
/* Tablet size */
/* Desktop size */
/*=========================================================================
|| WYSIWYG HTML output formatting
=========================================================================*/
.wysiwyg > *:first-child {
  margin-top: 0 !important; }

.wysiwyg > *:last-child {
  margin-bottom: 0 !important; }

.wysiwyg pre {
  font-family: monospace; }

/*=========================================================================
|| FILE: Base
===========================================================================
|| Base style for page elements
=========================================================================*/
body,
html {
  background-color: #379683;
  color: #fff;
  font-family: Arial, Helmet, Freesans, sans-serif;
  -webkit-font-smoothing: antialiased; }

.scrollbar::-webkit-scrollbar,
body::-webkit-scrollbar {
  width: 5px;
  height: 5px;
  background-color: #379683;
  -webkit-appearance: none; }

.scrollbar::-webkit-scrollbar-thumb,
body::-webkit-scrollbar-thumb {
  min-width: 5px;
  max-height: 5px;
  background-color: #05386b; }

.scrollbar::-webkit-scrollbar-track,
body::-webkit-scrollbar-track {
  display: none; }

svg,
.icon {
  display: inline-block;
  width: 16px;
  height: 16px;
  overflow: visible;
  transition: color 0.2s;
  fill: currentColor;
  color: currentColor;
  vertical-align: middle;
  pointer-events: none; }

img {
  max-width: 100%;
  height: auto;
  image-rendering: -webkit-optimize-contrast; }

* {
  -ms-touch-action: manipulation;
  touch-action: manipulation; }

.background {
  pointer-events: none;
  user-select: none; }

.link {
  transition: color 0.2s;
  cursor: pointer; }
  .link--primary {
    color: #fff; }
    .link--primary .icon {
      fill: #fff; }
    .link--primary--hover:hover .link--primary,
    .link--primary--hover:active .link--primary,
    .link--primary--hover:focus .link--primary,
    .link--primary--hover-active .link--primary,
    .link--primary--hover-active .link--primary,
    .link--primary--hover-active .link--primary, .link--primary:hover, .link--primary:active, .link--primary:focus {
      color: #379683; }
      .link--primary--hover:hover .link--primary .icon,
      .link--primary--hover:active .link--primary .icon,
      .link--primary--hover:focus .link--primary .icon,
      .link--primary--hover-active .link--primary .icon,
      .link--primary--hover-active .link--primary .icon,
      .link--primary--hover-active .link--primary .icon, .link--primary:hover .icon, .link--primary:active .icon, .link--primary:focus .icon {
        fill: #379683; }

.page__loading, .page__overlay {
  position: fixed;
  z-index: -1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transition: background-color 0.2s;
  background-color: transparent; }
  .page__loading > *, .page__overlay > * {
    display: none; }

.js_resize .page__loading {
  z-index: 99999;
  background: fade(#000, 40%);
  pointer-events: none;
  user-select: none; }
  .js_resize .page__loading > * {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); }

/*
Buttons

Clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality

.btn-block - grow element width to 100%
.btn-disable - disables the button, it cannot be clicked
.btn-link - display only text without decorations

Markup:
<a class="btn {{modifier_class}}">Anchor element</a>
<button class="btn {{modifier_class}}">Button element</button>
<input class="btn {{modifier_class}}" type="button" value="Input Button" />

Style guide: Component.Buttons
*/
.btn {
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  height: 100%;
  padding: 14px 6px;
  transition: background-color 0.2s, color 0.2s, border-color 0.2s, transform 0.2s;
  border: 0;
  border-radius: 5px;
  background-color: #05386b;
  color: #fff;
  font-size: 14px;
  letter-spacing: 0.4px;
  text-align: center;
  cursor: pointer;
  user-select: none;
  -webkit-user-drag: none; }
  .btn--hover:hover .btn,
  .btn--hover:active .btn,
  .btn--hover:focus .btn,
  .btn--hover-active .btn,
  .btn--hover-active .btn,
  .btn--hover-active .btn, .btn:hover, .btn:active, .btn:focus {
    background-color: #053666; }
  .btn .icon {
    transition: transform 0.2s; }
  .btn:active {
    transform: translateY(1px); }
  .btn-disable, .btn[disabled] {
    pointer-events: none; }
    .btn-disable:before, .btn[disabled]:before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: inherit;
      opacity: 0.6;
      background: #000;
      pointer-events: none; }
  .btn-block {
    display: block;
    width: 100% !important;
    max-width: 100% !important; }
  .btn-link {
    border-color: transparent !important;
    background: transparent !important;
    color: #000 !important; }
    .btn-link:before, .btn-link:after {
      background: transparent !important; }

/*
Colors

Clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality

.btn--primary - colors
.btn--primary:hover - colors
.btn--secondary - colors
.btn--success - colors
.btn--danger - colors
.btn--warning - colors
.btn--info - colors
.btn--light - colors
.btn--dark - colors

Markup:
<a class="btn {{modifier_class}}">Anchor element</a>
<button class="btn {{modifier_class}}">Button element</button>
<input class="btn {{modifier_class}}" type="button" value="Input Button" />

Style guide: Component.Buttons.colors
*/
.btn--primary {
  background-color: #05386b; }
  .btn--primary--hover:hover .btn--primary,
  .btn--primary--hover:active .btn--primary,
  .btn--primary--hover:focus .btn--primary,
  .btn--primary--hover-active .btn--primary,
  .btn--primary--hover-active .btn--primary,
  .btn--primary--hover-active .btn--primary, .btn--primary:hover, .btn--primary:active, .btn--primary:focus {
    background-color: #053667; }

.btn--secondary {
  background-color: #379683; }

.btn--success {
  background-color: #28a745; }

.btn--danger {
  background-color: #dc3545; }

.btn--warning {
  background-color: #ffc107; }

.btn--info {
  background-color: #17a2b8; }

.btn--light {
  background-color: #f8f9fa; }

.btn--dark {
  background-color: #343a40; }

/*
Size

.btn--large - size
.btn--wide - size
.btn--big - size
.btn--medium - size
.btn--small - size
.btn--tiny - size

Markup:
<a class="btn {{modifier_class}}">Anchor element</a>
<button class="btn {{modifier_class}}">Button element</button>
<input class="btn {{modifier_class}}" type="button" value="Input Button" />

Style guide: Component.Buttons.colors
*/
.btn--large {
  padding: 30px 50px; }

.btn--wide {
  padding-right: 60px;
  padding-left: 60px; }

.btn--big {
  padding: 30px 45px; }

.btn--medium {
  padding: 20px 20px; }

.btn--small {
  padding: 15px 20px; }

.btn--tiny {
  padding: 14px 12px; }

/*
Input

Example:
<div class="input">
<input type="text">
</div>

Style guide: Forms.input-default
*/
.input {
  position: relative; }
  .input input {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    -webkit-clip-path: inset(50%) !important;
    clip-path: inset(50%) !important;
    height: 1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
    white-space: nowrap !important;
    bottom: 0 !important;
    position: absolute !important;
    left: 50% !important; }
    .input input:disabled + .input-radio__label {
      user-select: none;
      pointer-events: none;
      opacity: 0.4; }
    .input input + .input-radio__label .input-radio__input--mark-color:before {
      opacity: 1; }
    .input input + .input-radio__label .input-radio__mark {
      opacity: 1; }

/*
Input Checkbox

Example: 
<div class="input input-checkbox">
	<input type="checkbox" id="checkbox1" name="checkbox1" required="required" />
		<label class="input-checkbox__label" for="checkbox1">
		<span class="input-checkbox__input"></span>
		<span class="input-checkbox__text">
			Label
		</span>
	</label>
</div>

<div class="input input-checkbox">
	<input type="checkbox" id="checkbox2" name="checkbox2" required="required">
	<label class="input-checkbox__label" for="checkbox2">
		<span class="input-checkbox__input input-checkbox__input--mark-icon">
			<svg class="input-checkbox__mark" viewBox="0 0 512 512"><path d="M256 0C114.615 0 0 114.615 0 256s114.615 256 256 256 256-114.615 256-256S397.385 0 256 0zm-48 416L102 278l47-49 59 75 185-151 23 23-208 240z"></path></svg>
		</span>
		<span class="input-checkbox__text">
			Label
		<span>
	</label>
</div>

<div class="input input-checkbox">
	<input type="checkbox" id="checkbox3" name="checkbox3" required="required">
	<label class="input-checkbox__label" for="checkbox3">
		<span class="input-checkbox__input input-checkbox__input--mark-color"></span>
		<span class="input-checkbox__text">
			Label
		<span>
	</label>
</div>

Style guide: Forms.input-checkbox
*/
.input-checkbox__input {
  width: 20px;
  height: 20px;
  position: absolute;
  top: 0;
  left: 0;
  transition: border-color 0.2s;
  border: 1px solid #05386b;
  /**
         * Style for using SVG for checkbox element mark 
         * Do not use transform - bug with mark size when checkbox is set on/off
         */
  /**
         * Style for using color fill for checkbox element mark 
         * Do not use transform - bug with mark size when checkbox is set on/off
         */ }
  .input-checkbox__input--mark-icon .input-checkbox__mark {
    position: absolute;
    top: 10%;
    left: 10%;
    opacity: 0;
    transition: opacity 0.2s, fill 0.2s;
    width: 80%;
    height: 80%;
    fill: #05386b; }
  .input-checkbox__input--mark-color:before {
    content: '';
    position: absolute;
    top: 5%;
    left: 5%;
    opacity: 0;
    transition: opacity 0.2s, background-color 0.2s;
    width: 90%;
    height: 90%;
    background-color: #05386b; }

.input-checkbox__label {
  cursor: pointer;
  display: block;
  padding-left: 30px; }
  .input-checkbox__label--hover:hover .input-checkbox__label .input-checkbox__input,
  .input-checkbox__label--hover:active .input-checkbox__label .input-checkbox__input,
  .input-checkbox__label--hover:focus .input-checkbox__label .input-checkbox__input,
  .input-checkbox__label--hover-active .input-checkbox__label .input-checkbox__input,
  .input-checkbox__label--hover-active .input-checkbox__label .input-checkbox__input,
  .input-checkbox__label--hover-active .input-checkbox__label .input-checkbox__input, .input-checkbox__label:hover .input-checkbox__input, .input-checkbox__label:active .input-checkbox__input, .input-checkbox__label:focus .input-checkbox__input {
    border-color: #000; }

.input-checkbox input:checked + .input-checkbox__label .input-checkbox__input {
  /* Style for using SVG for checkbox element mark */
  /* Style for using color fill for checkbox element mark */ }
  .input-checkbox input:checked + .input-checkbox__label .input-checkbox__input--mark-icon .input-checkbox__mark {
    opacity: 1; }
  .input-checkbox input:checked + .input-checkbox__label .input-checkbox__input--mark-color:before {
    opacity: 1; }

/*
Input Radio

Example: 
<div class="input input-radio">
	<input type="checkbox" id="checkbox-radio-default" name="checkbox-radio-default" required="required">
	<label class="input-radio__label" for="checkbox-radio-default">
		<span class="input-radio__input"></span>
		<span class="input-radio__text">Label<span>
	</label>
</div>

<div class="input input-radio">
	<input type="checkbox" id="checkbox-radio-mark-color" name="checkbox-radio-mark-color" required="required">
	<label class="input-radio__label" for="checkbox-radio-mark-color">
		<span class="input-radio__input input-radio__input--mark-color"></span>
		<span class="input-radio__text">
			Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco labo.
		<span>
	</label>
</div>

<div class="input input-radio">
	<input type="checkbox" id="checkbox-radio-mark-color" name="checkbox-radio-mark-color" required="required">
	<label class="input-radio__label" for="checkbox-radio-mark-color">
		<span class="input-radio__input input-radio__input--mark-icon">
			<svg class="input-checkbox__mark" viewBox="0 0 512 512"><path d="M256 0C114.615 0 0 114.615 0 256s114.615 256 256 256 256-114.615 256-256S397.385 0 256 0zm-48 416L102 278l47-49 59 75 185-151 23 23-208 240z"></path></svg>
		</span>
		<span class="input-radio__text">
			Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco labo.
		<span>
	</label>
</div>



Style guide: Forms.input-radio
*/
.input-radio__input {
  width: 20px;
  height: 20px;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: 50%;
  border: 1px solid #05386b;
  transition: border-color 0.2s; }
  .input-radio__input:before {
    content: '';
    transform: translate(-50%, -50%);
    position: absolute;
    top: 50%;
    left: 50%;
    transition: opacity 0.2s, background-color 0.2s;
    width: 14px;
    height: 14px;
    border-radius: 50%;
    background-color: #05386b;
    opacity: 0; }

.input-radio__mark {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 16px;
  height: 16px;
  fill: #05386b;
  transition: fill 0.2s;
  opacity: 0; }

.input-radio__label {
  cursor: pointer;
  display: block;
  padding-left: 30px; }

.input-radio input + .input-radio__label--hover:hover .input-radio input + .input-radio__label .input-radio,
.input-radio input + .input-radio__label--hover:active .input-radio input + .input-radio__label .input-radio,
.input-radio input + .input-radio__label--hover:focus .input-radio input + .input-radio__label .input-radio,
.input-radio input + .input-radio__label--hover-active .input-radio input + .input-radio__label .input-radio,
.input-radio input + .input-radio__label--hover-active .input-radio input + .input-radio__label .input-radio,
.input-radio input + .input-radio__label--hover-active .input-radio input + .input-radio__label .input-radio, .input-radio input + .input-radio__label:hover .input-radio, .input-radio input + .input-radio__label:active .input-radio, .input-radio input + .input-radio__label:focus .input-radio {
  /* Fake radio element */ }
  .input-radio input + .input-radio__label--hover:hover .input-radio input + .input-radio__label .input-radio__input,
  .input-radio input + .input-radio__label--hover:active .input-radio input + .input-radio__label .input-radio__input,
  .input-radio input + .input-radio__label--hover:focus .input-radio input + .input-radio__label .input-radio__input,
  .input-radio input + .input-radio__label--hover-active .input-radio input + .input-radio__label .input-radio__input,
  .input-radio input + .input-radio__label--hover-active .input-radio input + .input-radio__label .input-radio__input,
  .input-radio input + .input-radio__label--hover-active .input-radio input + .input-radio__label .input-radio__input, .input-radio input + .input-radio__label:hover .input-radio__input, .input-radio input + .input-radio__label:active .input-radio__input, .input-radio input + .input-radio__label:focus .input-radio__input {
    border-color: #000; }

.input-radio input:checked + .input-radio__label .input-radio__input--mark-color:before {
  opacity: 1; }

.input-radio input:checked + .input-radio__label .input-radio__mark {
  opacity: 1; }

/**
  * Input
**/
.input-text {
  transition: border-color 0.2s color 0.2s;
  height: 38px;
  padding: 4px 12px;
  font-size: 18px;
  border: 1px solid #05386b;
  border-radius: 8px;
  color: #05386b;
  width: 100%;
  /* Placeholder text style */ }
  .input-text::placeholder, .input-text::-webkit-input-placeholder, .input-text::-moz-placeholder, .input-text:-ms-input-placeholder, .input-text:-moz-placeholder {
    transition: color 0.2s;
    font-style: italic;
    color: #05386b; }
  .input-text:hover {
    border-color: fade(#000, 60%);
    color: fade(#000, 60%); }
    .input-text:hover::placeholder, .input-text:hover::-webkit-input-placeholder, .input-text:hover::-moz-placeholder, .input-text:hover:-ms-input-placeholder, .input-text:hover:-moz-placeholder {
      color: fade(#000, 60%); }
  .input-text:active, .input-text:focus {
    border-color: #000;
    color: #000; }
    .input-text:active::placeholder, .input-text:active::-webkit-input-placeholder, .input-text:active::-moz-placeholder, .input-text:active:-ms-input-placeholder, .input-text:active:-moz-placeholder, .input-text:focus::placeholder, .input-text:focus::-webkit-input-placeholder, .input-text:focus::-moz-placeholder, .input-text:focus:-ms-input-placeholder, .input-text:focus:-moz-placeholder {
      color: #000; }
  .input-text--block {
    display: block;
    width: 100%; }

/**
  * Input group
**/
.input-group > .input-group__item {
  position: relative;
  margin-bottom: 10px; }
  .input-group > .input-group__item:last-child {
    margin-bottom: 0; }

.input-group--block .input-group__item > * {
  display: block;
  width: 100%; }

.form {
  position: relative;
  padding: 10px; }
  .form__response-content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    opacity: 0;
    transition: opacity 0.2s, opacity 0.2s 0.2s; }
  .form__response {
    position: absolute;
    top: 50%;
    left: 50%;
    width: auto;
    transform: translate(-50%, -50%);
    transition: opacity 0.2s, opacity 0.2s 0.2s;
    z-index: -1;
    opacity: 0; }
    .form__response--msg {
      width: 100%;
      font-size: 16px;
      text-align: center;
      font-weight: 700; }

/**
 * JavaScript form class 
*/
.js_form--run .form__content {
  user-select: none;
  pointer-events: none;
  filter: blur(2px);
  opacity: 0.3; }

.js_form--run .form__response-content {
  opacity: 1;
  z-index: 1; }

.js_form--wait .form__response--wait {
  opacity: 1;
  z-index: 1; }

.js_form--msg .form__response--msg {
  opacity: 1;
  z-index: 1; }

/*=========================================================================
|| FILE: Header
===========================================================================
|| Style for header
=========================================================================*/
/**
 * Main header element style 
 * container for: navigation, brand image, etc)
 */
.header {
  height: inherit;
  display: flex;
  -webkit-backface-visibility: hidden;
  transition: height 0.2s;
  transition: box-shadow 0.2s;
  transition: background-color 0.2s;
  transition: padding 0.2s;
  background-color: #05386b;
  /* Header sticky */ }
  .header > .wrap {
    display: flex; }
  .header-placeholder {
    box-sizing: content-box;
    z-index: 7000;
    transition: background-color 0.2s;
    padding: 25px 0;
    top: 0;
    left: 0;
    width: 100%;
    background-color: #05386b; }
  .js_sticky-header .header {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 8000;
    box-shadow: 0 10px 30px -6px fade(#000, 60%);
    background-color: #fff; }
  .header__logo {
    width: 50px;
    height: 50px; }
    .header__logo-text {
      font-size: 18px;
      margin-left: 10px; }

/**
 * Burger button
 */
.burger-button {
  cursor: pointer;
  pointer-events: all;
  z-index: 8001;
  width: 35px;
  height: 24px;
  position: relative;
  /* Burger planks */
  /* Burger hover */ }
  @media screen and (min-width: 768px) {
    .burger-button {
      display: none; } }
  .burger-button > .plank {
    display: inline-block;
    position: absolute;
    left: 10%;
    width: 80%;
    height: 4px;
    transition: all 0.2s;
    background-color: #90938f;
    border-radius: 10px; }
    .burger-button > .plank:first-child {
      top: 0; }
    .burger-button > .plank:nth-child(2) {
      top: 50%;
      transform: translateY(-50%); }
    .burger-button > .plank:last-child {
      bottom: 0; }

/**
 * Burger menu
 */
@media screen and (max-width: 767px) {
  .burger-menu {
    overflow: hidden;
    display: flex;
    box-sizing: content-box;
    text-align: center;
    position: absolute;
    right: 0;
    top: 0;
    padding-top: 70px;
    width: 100%;
    height: 100vh;
    max-width: 300px;
    background-color: #05386b;
    box-shadow: -6px 0 10px rgba(0, 0, 0, 0.4);
    transform: translateX(100%); }
    .burger-menu > .burger-menu__item {
      margin-bottom: 20px; }
      .burger-menu > .burger-menu__item:last-child {
        margin-bottom: 0; }
    .burger-menu__container {
      width: 100%; } }

@media screen and (min-width: 768px) {
  .burger-menu {
    transition: height 0s ease 0s;
    box-sizing: border-box;
    display: flex !important;
    position: static;
    transform: none;
    overflow: unset; }
    .burger-menu__container {
      display: flex; } }

/*
|| Navigation
|| EMMET
nav.nav>a.nav__item*x
 */
.nav {
  box-sizing: content-box;
  bottom: 0;
  position: absolute;
  overflow: hidden; }
  @media screen and (min-width: 768px) {
    .nav {
      transition: height 0s ease 0s;
      box-sizing: border-box;
      display: flex !important;
      position: static;
      transform: none;
      overflow: unset; } }
  .nav__container {
    background-color: #05386b;
    text-align: center;
    z-index: 7001;
    position: relative; }
    @media screen and (min-width: 768px) {
      .nav__container {
        background-color: transparent;
        text-align: left;
        height: 100%;
        display: flex; } }
    .nav__container > .nav__item {
      display: block;
      color: #fff;
      transition: color 0.2s;
      margin-bottom: 10px;
      padding: 12px 0; }
      .nav__container > .nav__item--hover:hover .nav__container > .nav__item,
      .nav__container > .nav__item--hover:active .nav__container > .nav__item,
      .nav__container > .nav__item--hover:focus .nav__container > .nav__item,
      .nav__container > .nav__item--hover-active .nav__container > .nav__item,
      .nav__container > .nav__item--hover-active .nav__container > .nav__item,
      .nav__container > .nav__item--hover-active .nav__container > .nav__item, .nav__container > .nav__item:hover, .nav__container > .nav__item:active, .nav__container > .nav__item:focus {
        color: #b8b8b8; }
      .nav__container > .nav__item:last-child {
        margin-bottom: 0; }
      @media screen and (min-width: 768px) {
        .nav__container > .nav__item {
          margin-bottom: 0;
          padding: 0;
          margin-right: 10px;
          display: flex;
          justify-content: center;
          align-items: center; }
          .nav__container > .nav__item:last-child {
            margin-right: 0; } }
      @media screen and (min-width: 992px) {
        .nav__container > .nav__item {
          margin-right: 20px; } }
      .nav__container > .nav__item.active {
        color: #90938f; }

/**
 * Advanced
 */
html {
  /* Add fix when burger won't open */
  /* Add fix to burger-menu when menu is active */ }
  html.js_menu-active .header-placeholder,
  html.js_menu-active .header {
    background-color: transparent; }
  html:not(.js_menu-active) .header-placeholder,
  html:not(.js_menu-active) .header {
    background-color: transparent; }

/*
Tabs

Markup:
<div class="wrap">
 <div>content</div>
</div>

Emmet:
.wrap

Mixin:
wrap($max-width, $paddin-x);

Style guide: Elements.tabs
*/
.tabs__expand {
  display: none; }

.tabs__item {
  flex: 1 1 auto;
  padding: 20px;
  background-color: #05386b;
  text-align: center; }

.tabs__view {
  width: 100%; }

.tabs__expand {
  padding: 20px;
  background-color: #00050a; }

.tabs__content {
  display: flex;
  flex-direction: row; }

.tabs--vertical {
  flex-direction: column;
  text-align: center; }

.tabs--expand {
  flex-direction: column;
  text-align: center; }
  .tabs--expand .tabs__expand {
    display: block; }
  .tabs--expand .tabs__view {
    height: 0;
    overflow: hidden; }

@media screen and (min-width: 576px) {
  .sm_tabs__content {
    display: flex;
    flex-direction: row; }
  .sm_tabs--vertical {
    flex-direction: column;
    text-align: center; }
  .sm_tabs--expand {
    flex-direction: column;
    text-align: center; }
    .sm_tabs--expand .tabs__expand {
      display: block; }
    .sm_tabs--expand .tabs__view {
      height: 0;
      overflow: hidden; } }

@media screen and (min-width: 768px) {
  .md_tabs__content {
    display: flex;
    flex-direction: row; }
  .md_tabs--vertical {
    flex-direction: column;
    text-align: center; }
  .md_tabs--expand {
    flex-direction: column;
    text-align: center; }
    .md_tabs--expand .tabs__expand {
      display: block; }
    .md_tabs--expand .tabs__view {
      height: 0;
      overflow: hidden; } }

@media screen and (min-width: 992px) {
  .lg_tabs__content {
    display: flex;
    flex-direction: row; }
  .lg_tabs--vertical {
    flex-direction: column;
    text-align: center; }
  .lg_tabs--expand {
    flex-direction: column;
    text-align: center; }
    .lg_tabs--expand .tabs__expand {
      display: block; }
    .lg_tabs--expand .tabs__view {
      height: 0;
      overflow: hidden; } }

@media screen and (min-width: 1200px) {
  .xl_tabs__content {
    display: flex;
    flex-direction: row; }
  .xl_tabs--vertical {
    flex-direction: column;
    text-align: center; }
  .xl_tabs--expand {
    flex-direction: column;
    text-align: center; }
    .xl_tabs--expand .tabs__expand {
      display: block; }
    .xl_tabs--expand .tabs__view {
      height: 0;
      overflow: hidden; } }

@media screen and (min-width: 1366px) {
  .hd_tabs__content {
    display: flex;
    flex-direction: row; }
  .hd_tabs--vertical {
    flex-direction: column;
    text-align: center; }
  .hd_tabs--expand {
    flex-direction: column;
    text-align: center; }
    .hd_tabs--expand .tabs__expand {
      display: block; }
    .hd_tabs--expand .tabs__view {
      height: 0;
      overflow: hidden; } }

@media screen and (min-width: 1440px) {
  .whd_tabs__content {
    display: flex;
    flex-direction: row; }
  .whd_tabs--vertical {
    flex-direction: column;
    text-align: center; }
  .whd_tabs--expand {
    flex-direction: column;
    text-align: center; }
    .whd_tabs--expand .tabs__expand {
      display: block; }
    .whd_tabs--expand .tabs__view {
      height: 0;
      overflow: hidden; } }

/*
Validator

Style for jQuery Validation Plugin

Markup:
<div class="wrap">
 <div>content</div>
</div>

Emmet:
.wrap

Mixin:
wrap($max-width, $paddin-x);

Style guide: JavaScript.validator
*/
.input-error {
  color: #dc3545 !important;
  border-color: #dc3545 !important;
  /**
      * Absolute validator information
      - right style
    **/
  /**
      * Absolute validator information
      - left style
    **/
  /**
      * Default validator information
    **/ }
  .input-error--absolute + *:not([class]) {
    padding-top: 20px; }
    @media screen and (min-width: 768px) {
      .input-error--absolute + *:not([class]) {
        position: absolute;
        z-index: 20;
        top: 50%;
        padding-left: 10px; } }
    .input-error--absolute + *:not([class]) label {
      display: block;
      position: relative;
      padding: 6px;
      border: 1px solid #dc3545;
      border-radius: 4px;
      background-color: #fff;
      font-size: 13px;
      text-align: center; }
      .input-error--absolute + *:not([class]) label:before {
        content: '';
        position: absolute;
        top: 0;
        left: 50%;
        transform: translate(-50%, -100%); }
  @media screen and (min-width: 768px) {
    .input-error--right + *:not([class]) {
      transform: translate(100%, -50%);
      right: 0; } }
  @media screen and (min-width: 768px) {
    .input-error--left + *:not([class]) {
      left: 0;
      transform: translate(-100%, -50%);
      padding-left: 0;
      padding-right: 10px; } }
  @media screen and (min-width: 768px) {
    .input-error--left + *:not([class]) label:before {
      top: 50%;
      right: 0;
      left: auto;
      transform: translate(100%, -50%); } }
  .input-error label.input-error {
    text-align: center;
    display: block;
    padding: 6px; }

/**
  * Validator class
  - success
**/
.input-success {
  border-color: #28a745 !important;
  color: #28a745 !important; }
  .input-success + *:not([class]) {
    display: none; }

.block-square {
  background-color: red; }
  .block-square * > {
    color: blue; }

.holder {
  position: relative; }
  .holder__content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }

.holder {
  background-color: red;
  color: blue;
  position: relative; }
  .holder:before {
    display: block;
    content: '';
    width: 100%;
    padding-top: 50%; }

.placeholder {
  color: blue; }
  .placeholder::placeholder, .placeholder::-webkit-input-placeholder, .placeholder::-moz-placeholder, .placeholder:-ms-input-placeholder, .placeholder:-moz-placeholder {
    color: red; }

.scrollbar {
  width: 100%;
  height: 200px;
  overflow: scroll; }
  .scrollbar::-webkit-scrollbar {
    width: "20px";
    height: "20px";
    background-color: blue;
    -webkit-appearance: none; }
  .scrollbar::-webkit-scrollbar-thumb {
    min-width: "20px";
    max-height: "20px";
    background-color: red; }
  .scrollbar::-webkit-scrollbar-track {
    display: none; }
  .scrollbar__content {
    width: 200%;
    height: 200%; }

.triangle-up {
  width: 0;
  height: 0;
  border-bottom: 20px solid red;
  border-right: 15px solid transparent;
  border-left: 15px solid transparent; }

.triangle-right {
  width: 0;
  height: 0;
  border-left: 20px solid red;
  border-top: 15px solid transparent;
  border-bottom: 15px solid transparent; }

.triangle-down {
  width: 0;
  height: 0;
  border-top: 20px solid red;
  border-right: 15px solid transparent;
  border-left: 15px solid transparent; }

.triangle-left {
  width: 0;
  height: 0;
  border-right: 10px solid blue;
  border-top: 10px solid transparent;
  border-bottom: 10px solid transparent; }

/*# sourceMappingURL=style.css.map */
