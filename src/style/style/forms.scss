/*
Input

Example:
<div class="input">
<input type="text">
</div>

Style guide: Forms.input-default
*/
.input {
  position: relative;

  // Hide oryginal radio element
  input {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    -webkit-clip-path: inset(50%) !important;
    clip-path: inset(50%) !important;
    height: 1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
    white-space: nowrap !important;
    bottom: 0 !important;
    position: absolute !important;
    left: 50% !important;

    // Block user select when input is disabled
    &:disabled {
      & + .input-radio {
        &__label {
          user-select: none;
          pointer-events: none;
          opacity: 0.4;
        }
      }
    }

    // Input checked
    & + .input-radio {
      // Radio element mark fill
      &__label .input-radio__input--mark-color {
        &:before {
          opacity: 1;
        }
      }
      // Radio element mark icon
      &__label .input-radio__mark {
        opacity: 1;
      }
    }
  }
}

/*
Input Checkbox

Example: 
<div class="input input-checkbox">
	<input type="checkbox" id="checkbox1" name="checkbox1" required="required" />
		<label class="input-checkbox__label" for="checkbox1">
		<span class="input-checkbox__input"></span>
		<span class="input-checkbox__text">
			Label
		</span>
	</label>
</div>

<div class="input input-checkbox">
	<input type="checkbox" id="checkbox2" name="checkbox2" required="required">
	<label class="input-checkbox__label" for="checkbox2">
		<span class="input-checkbox__input input-checkbox__input--mark-icon">
			<svg class="input-checkbox__mark" viewBox="0 0 512 512"><path d="M256 0C114.615 0 0 114.615 0 256s114.615 256 256 256 256-114.615 256-256S397.385 0 256 0zm-48 416L102 278l47-49 59 75 185-151 23 23-208 240z"></path></svg>
		</span>
		<span class="input-checkbox__text">
			Label
		<span>
	</label>
</div>

<div class="input input-checkbox">
	<input type="checkbox" id="checkbox3" name="checkbox3" required="required">
	<label class="input-checkbox__label" for="checkbox3">
		<span class="input-checkbox__input input-checkbox__input--mark-color"></span>
		<span class="input-checkbox__text">
			Label
		<span>
	</label>
</div>

Style guide: Forms.input-checkbox
*/
.input-checkbox {
  // Fake checkbox input
  &__input {
    width: 20px;
    height: 20px;
    position: absolute;
    top: 0;
    left: 0;
    transition: border-color $time-transition;
    border: 1px solid color('primary');

    /**
         * Style for using SVG for checkbox element mark 
         * Do not use transform - bug with mark size when checkbox is set on/off
         */
    &--mark-icon {
      .input-checkbox {
        &__mark {
          position: absolute;
          top: 10%;
          left: 10%;
          opacity: 0;
          transition: opacity $time-transition, fill $time-transition; // Size
          width: 80%;
          height: 80%; // Style
          fill: color('primary');
        }
      }
    }

    /**
         * Style for using color fill for checkbox element mark 
         * Do not use transform - bug with mark size when checkbox is set on/off
         */
    &--mark-color {
      &:before {
        content: '';
        position: absolute;
        top: 5%;
        left: 5%;
        opacity: 0;
        transition: opacity $time-transition, background-color $time-transition; // Size
        width: 90%;
        height: 90%; // Style
        background-color: color('primary');
      }
    }
  }

  // Clickable label toggle checkbox
  &__label {
    cursor: pointer;
    display: block; // Space for checkbox
    padding-left: 30px;

    @include add_hover {
      .input-checkbox {
        // Fake checkbox element
        &__input {
          border-color: color('black');
        }
      }
    }
  }

  // Toggle checkbox element
  input:checked {
    & + .input-checkbox {
      &__label .input-checkbox__input {
        /* Style for using SVG for checkbox element mark */
        &--mark-icon .input-checkbox__mark {
          opacity: 1;
        }
        /* Style for using color fill for checkbox element mark */
        &--mark-color {
          &:before {
            opacity: 1;
          }
        }
      }
    }
  }
}

/*
Input Radio

Example: 
<div class="input input-radio">
	<input type="checkbox" id="checkbox-radio-default" name="checkbox-radio-default" required="required">
	<label class="input-radio__label" for="checkbox-radio-default">
		<span class="input-radio__input"></span>
		<span class="input-radio__text">Label<span>
	</label>
</div>

<div class="input input-radio">
	<input type="checkbox" id="checkbox-radio-mark-color" name="checkbox-radio-mark-color" required="required">
	<label class="input-radio__label" for="checkbox-radio-mark-color">
		<span class="input-radio__input input-radio__input--mark-color"></span>
		<span class="input-radio__text">
			Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco labo.
		<span>
	</label>
</div>

<div class="input input-radio">
	<input type="checkbox" id="checkbox-radio-mark-color" name="checkbox-radio-mark-color" required="required">
	<label class="input-radio__label" for="checkbox-radio-mark-color">
		<span class="input-radio__input input-radio__input--mark-icon">
			<svg class="input-checkbox__mark" viewBox="0 0 512 512"><path d="M256 0C114.615 0 0 114.615 0 256s114.615 256 256 256 256-114.615 256-256S397.385 0 256 0zm-48 416L102 278l47-49 59 75 185-151 23 23-208 240z"></path></svg>
		</span>
		<span class="input-radio__text">
			Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco labo.
		<span>
	</label>
</div>



Style guide: Forms.input-radio
*/
.input-radio {
  // Fake radio input
  &__input {
    width: 20px;
    height: 20px;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 50%;
    border: 1px solid color('primary');
    transition: border-color $time-transition;

    // Radio element mark color
    &:before {
      content: '';
      transform: translate(-50%, -50%);
      position: absolute;
      top: 50%;
      left: 50%;
      transition: opacity $time-transition, background-color $time-transition;
      width: 14px;
      height: 14px;
      border-radius: 50%;
      background-color: color('primary');
      opacity: 0;
    }

    // Radio element mark icon
    &--mark-icon {
    }
  }

  &__mark {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 16px;
    height: 16px;
    fill: color('primary');
    transition: fill $time-transition;
    opacity: 0;
  }

  // Clickable label toggle radio
  &__label {
    cursor: pointer;
    display: block;
    padding-left: 30px;
  }

  input {
    & + .input-radio {
      &__label {
        @include add_hover {
          .input-radio {
            /* Fake radio element */
            &__input {
              border-color: color('black');
            }
          }
        }
      }
    }
  }

  // Toggle
  input:checked {
    & + .input-radio {
      // Radio element mark fill
      &__label {
        .input-radio__input--mark-color {
          &:before {
            opacity: 1;
          }
        }
        .input-radio__mark {
          opacity: 1;
        }
      }
    }
  }
}

/**
  * Input
**/

.input-text {
  transition: border-color $time-transition color $time-transition; // Size
  height: 38px;
  padding: 4px 12px;
  font-size: 18px; // Style
  border: 1px solid color('primary');
  border-radius: 8px;
  color: color('primary');
  width: 100%;
  /* Placeholder text style */
  @include add_placeholder {
    transition: color $time-transition;
    font-style: italic;
    color: color('primary');
  }
  &:hover {
    border-color: fade(color('black'), 60%);
    color: fade(color('black'), 60%);
    @include add_placeholder {
      color: fade(color('black'), 60%);
    }
  } // State: active and focus
  &:active,
  &:focus {
    border-color: color('black');
    color: color('black');
    @include add_placeholder {
      color: color('black');
    }
  } // Block input
  &--block {
    display: block;
    width: 100%;
  }
}

/**
  * Input group
**/

.input-group {
  // Space between groups
  & > &__item {
    position: relative;
    margin-bottom: 10px;
    &:last-child {
      margin-bottom: 0;
    }
  }
  // Full blocks children
  &--block {
    .input-group {
      &__item {
        & > * {
          display: block;
          width: 100%;
        }
      }
    }
  }
}

.form {
  position: relative;
  padding: 10px;

  // JS
  &__response-content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    opacity: 0;
    transition: opacity $time-transition, opacity $time-transition $time-transition;
  }

  &__response {
    position: absolute;
    top: 50%;
    left: 50%;
    width: auto;
    transform: translate(-50%, -50%);
    transition: opacity $time-transition, opacity $time-transition $time-transition;
    z-index: -1;
    opacity: 0;
    &--wait {
    }
    &--msg {
      width: 100%;
      font-size: 16px;
      text-align: center;
      font-weight: 700;
    }
  }
}

/**
 * JavaScript form class 
*/

.js_form {
  &--run {
    .form {
      &__content {
        user-select: none;
        pointer-events: none;
        filter: blur(2px);
        opacity: 0.3;
      }
      &__response-content {
        opacity: 1;
        z-index: 1;
      }
    }
  }
  &--wait {
    .form {
      &__response {
        &--wait {
          opacity: 1;
          z-index: 1;
        }
      }
    }
  }
  &--msg {
    .form {
      &__response {
        &--msg {
          opacity: 1;
          z-index: 1;
        }
      }
    }
  }
}
