/*=========================================================================
|| FILE: Flex grid core
=========================================================================*/

/**
  * Grid generator
**/

.grid-responsive(@i: (length(@grid-list))) when (@i > 0) {

    @grid-name: arrayElement(@grid-list, @i - 2);

    @grid-value: arrayElement(@grid-list, @i - 1);

    @media @grid-name {

        // Create responsive row class
        .@{grid-value}_row {
            .row();
        } 
        // Loop grid-count (default 12) to create class
        .loop(@temp2: @grid-count) when (@temp2 >=0) {
            & when (@temp2 > 0) {
                .@{grid-value}_col-@{temp2} {
                    flex-basis: 100%/(@grid-count / @temp2);
                    max-width: 100%/(@grid-count / @temp2);
                }
            }
            & when not (@temp2 =@grid-count) {
                .@{grid-value}_pull-@{temp2} {
                    right: 100%/(@grid-count / @temp2);
                }
                .@{grid-value}_push-@{temp2} {
                    left: 100%/(@grid-count / @temp2);
                }
            }
            .loop(@temp2 - 1);
        }
        .loop(); 
        // End Loop
    }
    .grid-responsive(@i - 2);
}

.loop(@grid-count, {
    .col-@{value} {
        flex-basis: 100%/(@grid-count / @value);
        max-width: 100%/(@grid-count / @value);
    }
    & when not (@value =@grid-count) {
        .pull-@{value} {
            right: 100%/(@grid-count / @value);
        }
        .push-@{value} {
            left: 100%/(@grid-count / @value);
        }
    }
}

);
.grid-responsive();

/**
  * Default grid style
**/

.row {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    &>* {
        flex-grow: 0;
        flex-shrink: 0;
        height: auto !important;
        min-height: 1px;
        position: relative;
        flex-direction: column;
        display: flex;
    }
}

/**
  * Addon row grid style for columns inside
  * center, v-center, h-center
**/

.row {
    &-space {
        margin: 0 0 -1.25% -1.25%;
        & > * {
            padding: 0 0 1.25% 1.25%;
        }
    }
    &-responsive {
        flex-wrap: nowrap;
        overflow: hidden;
    }
    // Vertical & horizontal center
    &-center {
        &>* {
            align-items: center;
            justify-content: center;
        }
    } 
    // Vertical center
    &-v-center {
        &>* {
            align-items: center;
        }
    } 
    // Horizontal center
    &-h-center {
        &>* {
            justify-content: center;
        }
    }
}

/**
  * Row responsive style
**/

.create-responsive-class( row-reverse, {
    flex-direction: row-reverse;
});

/**
  * Addon col grid style
  * center, v-center, h-center
**/

.col {

    flex: 1 1 1px !important;

    &-responsive {
        flex: 1 1 auto !important;
    }
    // Vertical & horizontal center
    &-center {
        align-items: center;
        justify-content: center;
    } 
    // Vertical center
    &-v {
        &-center {
            align-items: center;
        }
    } 
    // Horizontal center
    &-h {
        &-center {
            justify-content: center;
        }
    }
}
